// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: contest.proto

// Текущий пакет - указывает пространство имен для сервиса и сообщений.

package contestV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Person
type Person struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName  string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName   string                 `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName string                 `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Phone      []string               `protobuf:"bytes,5,rep,name=phone,proto3" json:"phone,omitempty"`
	Email      []string               `protobuf:"bytes,6,rep,name=email,proto3" json:"email,omitempty"`
	// string login = 7;
	Bio           string                 `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`
	City          string                 `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	Active        bool                   `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_contest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{0}
}

func (x *Person) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Person) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Person) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Person) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *Person) GetPhone() []string {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *Person) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Person) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Person) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Person) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Person) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Person) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Person) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Person) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Person) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Person) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddPersonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirstName     string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName    string                 `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Phone         []string               `protobuf:"bytes,5,rep,name=phone,proto3" json:"phone,omitempty"`
	Email         []string               `protobuf:"bytes,6,rep,name=email,proto3" json:"email,omitempty"`
	Bio           string                 `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`
	City          string                 `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	Active        bool                   `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPersonRequest) Reset() {
	*x = AddPersonRequest{}
	mi := &file_contest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPersonRequest) ProtoMessage() {}

func (x *AddPersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPersonRequest.ProtoReflect.Descriptor instead.
func (*AddPersonRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{1}
}

func (x *AddPersonRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AddPersonRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AddPersonRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *AddPersonRequest) GetPhone() []string {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *AddPersonRequest) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *AddPersonRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddPersonRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddPersonRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddPersonRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddPersonRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddPersonRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddPersonRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddPersonRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddPersonRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddPersonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName     string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName    string                 `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Phone         []string               `protobuf:"bytes,5,rep,name=phone,proto3" json:"phone,omitempty"`
	Email         []string               `protobuf:"bytes,6,rep,name=email,proto3" json:"email,omitempty"`
	Bio           string                 `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`
	City          string                 `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	Active        bool                   `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPersonResponse) Reset() {
	*x = AddPersonResponse{}
	mi := &file_contest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPersonResponse) ProtoMessage() {}

func (x *AddPersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPersonResponse.ProtoReflect.Descriptor instead.
func (*AddPersonResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{2}
}

func (x *AddPersonResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddPersonResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AddPersonResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AddPersonResponse) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *AddPersonResponse) GetPhone() []string {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *AddPersonResponse) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *AddPersonResponse) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddPersonResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddPersonResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddPersonResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddPersonResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddPersonResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddPersonResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddPersonResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddPersonResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Contest
type AddContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition   string                 `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	AuthorId      string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ArtistId      string                 `protobuf:"bytes,6,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	SongOwnId     string                 `protobuf:"bytes,7,opt,name=song_own_id,json=songOwnId,proto3" json:"song_own_id,omitempty"`
	SongRemakeId  string                 `protobuf:"bytes,8,opt,name=song_remake_id,json=songRemakeId,proto3" json:"song_remake_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,9,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Sort          int32                  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	RateBook      []string               `protobuf:"bytes,11,rep,name=rate_book,json=rateBook,proto3" json:"rate_book,omitempty"`
	Status        int32                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddContestRequest) Reset() {
	*x = AddContestRequest{}
	mi := &file_contest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContestRequest) ProtoMessage() {}

func (x *AddContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContestRequest.ProtoReflect.Descriptor instead.
func (*AddContestRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{3}
}

func (x *AddContestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddContestRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AddContestRequest) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *AddContestRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *AddContestRequest) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *AddContestRequest) GetSongOwnId() string {
	if x != nil {
		return x.SongOwnId
	}
	return ""
}

func (x *AddContestRequest) GetSongRemakeId() string {
	if x != nil {
		return x.SongRemakeId
	}
	return ""
}

func (x *AddContestRequest) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *AddContestRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddContestRequest) GetRateBook() []string {
	if x != nil {
		return x.RateBook
	}
	return nil
}

func (x *AddContestRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddContestRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddContestRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddContestRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddContestRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddContestRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddContestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition   string                 `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	AuthorId      string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ArtistId      string                 `protobuf:"bytes,6,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	SongOwnId     string                 `protobuf:"bytes,7,opt,name=song_own_id,json=songOwnId,proto3" json:"song_own_id,omitempty"`
	SongRemakeId  string                 `protobuf:"bytes,8,opt,name=song_remake_id,json=songRemakeId,proto3" json:"song_remake_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,9,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Sort          int32                  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	RateBook      []string               `protobuf:"bytes,11,rep,name=rate_book,json=rateBook,proto3" json:"rate_book,omitempty"`
	Status        int32                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddContestResponse) Reset() {
	*x = AddContestResponse{}
	mi := &file_contest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContestResponse) ProtoMessage() {}

func (x *AddContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContestResponse.ProtoReflect.Descriptor instead.
func (*AddContestResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{4}
}

func (x *AddContestResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddContestResponse) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AddContestResponse) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *AddContestResponse) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *AddContestResponse) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *AddContestResponse) GetSongOwnId() string {
	if x != nil {
		return x.SongOwnId
	}
	return ""
}

func (x *AddContestResponse) GetSongRemakeId() string {
	if x != nil {
		return x.SongRemakeId
	}
	return ""
}

func (x *AddContestResponse) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *AddContestResponse) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddContestResponse) GetRateBook() []string {
	if x != nil {
		return x.RateBook
	}
	return nil
}

func (x *AddContestResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddContestResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddContestResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddContestResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddContestResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddContestResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Artist and CreateArtist
type Artist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle    string                 `protobuf:"bytes,3,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Type          []string               `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	City          string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Site          string                 `protobuf:"bytes,8,opt,name=site,proto3" json:"site,omitempty"`
	Photo         []string               `protobuf:"bytes,9,rep,name=photo,proto3" json:"photo,omitempty"`
	Bio           string                 `protobuf:"bytes,10,opt,name=bio,proto3" json:"bio,omitempty"`
	Socmedia      []string               `protobuf:"bytes,11,rep,name=socmedia,proto3" json:"socmedia,omitempty"`
	Release       []string               `protobuf:"bytes,12,rep,name=release,proto3" json:"release,omitempty"`
	Team          []string               `protobuf:"bytes,13,rep,name=team,proto3" json:"team,omitempty"`
	Active        bool                   `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,15,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artist) Reset() {
	*x = Artist{}
	mi := &file_contest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{5}
}

func (x *Artist) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Artist) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Artist) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *Artist) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Artist) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Artist) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Artist) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Artist) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *Artist) GetPhoto() []string {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *Artist) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Artist) GetSocmedia() []string {
	if x != nil {
		return x.Socmedia
	}
	return nil
}

func (x *Artist) GetRelease() []string {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *Artist) GetTeam() []string {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *Artist) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Artist) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Artist) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Artist) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Artist) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddArtistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle    string                 `protobuf:"bytes,3,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Type          []string               `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	City          string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Site          string                 `protobuf:"bytes,8,opt,name=site,proto3" json:"site,omitempty"`
	Photo         []string               `protobuf:"bytes,9,rep,name=photo,proto3" json:"photo,omitempty"`
	Bio           string                 `protobuf:"bytes,10,opt,name=bio,proto3" json:"bio,omitempty"`
	Socmedia      []string               `protobuf:"bytes,11,rep,name=socmedia,proto3" json:"socmedia,omitempty"`
	Release       []string               `protobuf:"bytes,12,rep,name=release,proto3" json:"release,omitempty"`
	Team          []string               `protobuf:"bytes,13,rep,name=team,proto3" json:"team,omitempty"`
	Active        bool                   `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,15,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddArtistRequest) Reset() {
	*x = AddArtistRequest{}
	mi := &file_contest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArtistRequest) ProtoMessage() {}

func (x *AddArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArtistRequest.ProtoReflect.Descriptor instead.
func (*AddArtistRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{6}
}

func (x *AddArtistRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddArtistRequest) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *AddArtistRequest) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *AddArtistRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddArtistRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddArtistRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddArtistRequest) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *AddArtistRequest) GetPhoto() []string {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *AddArtistRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddArtistRequest) GetSocmedia() []string {
	if x != nil {
		return x.Socmedia
	}
	return nil
}

func (x *AddArtistRequest) GetRelease() []string {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *AddArtistRequest) GetTeam() []string {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *AddArtistRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddArtistRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddArtistRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddArtistRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddArtistRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddArtistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle    string                 `protobuf:"bytes,3,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Type          []string               `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	City          string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Site          string                 `protobuf:"bytes,8,opt,name=site,proto3" json:"site,omitempty"`
	Photo         []string               `protobuf:"bytes,9,rep,name=photo,proto3" json:"photo,omitempty"`
	Bio           string                 `protobuf:"bytes,10,opt,name=bio,proto3" json:"bio,omitempty"`
	Socmedia      []string               `protobuf:"bytes,11,rep,name=socmedia,proto3" json:"socmedia,omitempty"`
	Release       []string               `protobuf:"bytes,12,rep,name=release,proto3" json:"release,omitempty"`
	Team          []string               `protobuf:"bytes,13,rep,name=team,proto3" json:"team,omitempty"`
	Active        bool                   `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,15,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddArtistResponse) Reset() {
	*x = AddArtistResponse{}
	mi := &file_contest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArtistResponse) ProtoMessage() {}

func (x *AddArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArtistResponse.ProtoReflect.Descriptor instead.
func (*AddArtistResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{7}
}

func (x *AddArtistResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddArtistResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddArtistResponse) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *AddArtistResponse) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *AddArtistResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddArtistResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddArtistResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddArtistResponse) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *AddArtistResponse) GetPhoto() []string {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *AddArtistResponse) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddArtistResponse) GetSocmedia() []string {
	if x != nil {
		return x.Socmedia
	}
	return nil
}

func (x *AddArtistResponse) GetRelease() []string {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *AddArtistResponse) GetTeam() []string {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *AddArtistResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddArtistResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddArtistResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddArtistResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddArtistResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Song
type Song struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Artist        []string               `protobuf:"bytes,2,rep,name=artist,proto3" json:"artist,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	AuthorLyrics  []string               `protobuf:"bytes,4,rep,name=author_lyrics,json=authorLyrics,proto3" json:"author_lyrics,omitempty"`
	AuthorMusic   []string               `protobuf:"bytes,5,rep,name=author_music,json=authorMusic,proto3" json:"author_music,omitempty"`
	Arranger      []string               `protobuf:"bytes,6,rep,name=arranger,proto3" json:"arranger,omitempty"`
	Audio         []string               `protobuf:"bytes,7,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,8,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,9,rep,name=video,proto3" json:"video,omitempty"`
	Pts           []string               `protobuf:"bytes,10,rep,name=pts,proto3" json:"pts,omitempty"`
	Release       string                 `protobuf:"bytes,11,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,12,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Song) Reset() {
	*x = Song{}
	mi := &file_contest_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{8}
}

func (x *Song) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Song) GetArtist() []string {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *Song) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Song) GetAuthorLyrics() []string {
	if x != nil {
		return x.AuthorLyrics
	}
	return nil
}

func (x *Song) GetAuthorMusic() []string {
	if x != nil {
		return x.AuthorMusic
	}
	return nil
}

func (x *Song) GetArranger() []string {
	if x != nil {
		return x.Arranger
	}
	return nil
}

func (x *Song) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *Song) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *Song) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Song) GetPts() []string {
	if x != nil {
		return x.Pts
	}
	return nil
}

func (x *Song) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *Song) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *Song) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Song) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Song) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Song) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Song) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddSongRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        []string               `protobuf:"bytes,2,rep,name=artist,proto3" json:"artist,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	AuthorLyrics  []string               `protobuf:"bytes,4,rep,name=author_lyrics,json=authorLyrics,proto3" json:"author_lyrics,omitempty"`
	AuthorMusic   []string               `protobuf:"bytes,5,rep,name=author_music,json=authorMusic,proto3" json:"author_music,omitempty"`
	Arranger      []string               `protobuf:"bytes,6,rep,name=arranger,proto3" json:"arranger,omitempty"`
	Audio         []string               `protobuf:"bytes,7,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,8,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,9,rep,name=video,proto3" json:"video,omitempty"`
	Pts           []string               `protobuf:"bytes,10,rep,name=pts,proto3" json:"pts,omitempty"`
	Release       string                 `protobuf:"bytes,11,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,12,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSongRequest) Reset() {
	*x = AddSongRequest{}
	mi := &file_contest_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongRequest) ProtoMessage() {}

func (x *AddSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongRequest.ProtoReflect.Descriptor instead.
func (*AddSongRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{9}
}

func (x *AddSongRequest) GetArtist() []string {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *AddSongRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddSongRequest) GetAuthorLyrics() []string {
	if x != nil {
		return x.AuthorLyrics
	}
	return nil
}

func (x *AddSongRequest) GetAuthorMusic() []string {
	if x != nil {
		return x.AuthorMusic
	}
	return nil
}

func (x *AddSongRequest) GetArranger() []string {
	if x != nil {
		return x.Arranger
	}
	return nil
}

func (x *AddSongRequest) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AddSongRequest) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *AddSongRequest) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *AddSongRequest) GetPts() []string {
	if x != nil {
		return x.Pts
	}
	return nil
}

func (x *AddSongRequest) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *AddSongRequest) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *AddSongRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddSongRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddSongRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddSongRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddSongRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Artist        []string               `protobuf:"bytes,2,rep,name=artist,proto3" json:"artist,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	AuthorLyrics  []string               `protobuf:"bytes,4,rep,name=author_lyrics,json=authorLyrics,proto3" json:"author_lyrics,omitempty"`
	AuthorMusic   []string               `protobuf:"bytes,5,rep,name=author_music,json=authorMusic,proto3" json:"author_music,omitempty"`
	Arranger      []string               `protobuf:"bytes,6,rep,name=arranger,proto3" json:"arranger,omitempty"`
	Audio         []string               `protobuf:"bytes,7,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,8,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,9,rep,name=video,proto3" json:"video,omitempty"`
	Pts           []string               `protobuf:"bytes,10,rep,name=pts,proto3" json:"pts,omitempty"`
	Release       string                 `protobuf:"bytes,11,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,12,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSongResponse) Reset() {
	*x = AddSongResponse{}
	mi := &file_contest_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongResponse) ProtoMessage() {}

func (x *AddSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongResponse.ProtoReflect.Descriptor instead.
func (*AddSongResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{10}
}

func (x *AddSongResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddSongResponse) GetArtist() []string {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *AddSongResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddSongResponse) GetAuthorLyrics() []string {
	if x != nil {
		return x.AuthorLyrics
	}
	return nil
}

func (x *AddSongResponse) GetAuthorMusic() []string {
	if x != nil {
		return x.AuthorMusic
	}
	return nil
}

func (x *AddSongResponse) GetArranger() []string {
	if x != nil {
		return x.Arranger
	}
	return nil
}

func (x *AddSongResponse) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AddSongResponse) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *AddSongResponse) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *AddSongResponse) GetPts() []string {
	if x != nil {
		return x.Pts
	}
	return nil
}

func (x *AddSongResponse) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *AddSongResponse) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *AddSongResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddSongResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddSongResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddSongResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddSongResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Lit_work - Литературное произведение
type LitWork struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorID      []string               `protobuf:"bytes,3,rep,name=authorID,proto3" json:"authorID,omitempty"`
	Audio         []string               `protobuf:"bytes,4,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,5,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,6,rep,name=video,proto3" json:"video,omitempty"`
	Release       string                 `protobuf:"bytes,7,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,8,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,10,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LitWork) Reset() {
	*x = LitWork{}
	mi := &file_contest_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LitWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LitWork) ProtoMessage() {}

func (x *LitWork) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LitWork.ProtoReflect.Descriptor instead.
func (*LitWork) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{11}
}

func (x *LitWork) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LitWork) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LitWork) GetAuthorID() []string {
	if x != nil {
		return x.AuthorID
	}
	return nil
}

func (x *LitWork) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *LitWork) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *LitWork) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *LitWork) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *LitWork) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *LitWork) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *LitWork) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *LitWork) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *LitWork) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *LitWork) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddLitWorkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorID      []string               `protobuf:"bytes,3,rep,name=authorID,proto3" json:"authorID,omitempty"`
	Audio         []string               `protobuf:"bytes,4,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,5,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,6,rep,name=video,proto3" json:"video,omitempty"`
	Release       string                 `protobuf:"bytes,7,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,8,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,10,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLitWorkRequest) Reset() {
	*x = AddLitWorkRequest{}
	mi := &file_contest_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLitWorkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLitWorkRequest) ProtoMessage() {}

func (x *AddLitWorkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLitWorkRequest.ProtoReflect.Descriptor instead.
func (*AddLitWorkRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{12}
}

func (x *AddLitWorkRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddLitWorkRequest) GetAuthorID() []string {
	if x != nil {
		return x.AuthorID
	}
	return nil
}

func (x *AddLitWorkRequest) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AddLitWorkRequest) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *AddLitWorkRequest) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *AddLitWorkRequest) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *AddLitWorkRequest) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *AddLitWorkRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddLitWorkRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddLitWorkRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddLitWorkRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddLitWorkRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddLitWorkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorID      []string               `protobuf:"bytes,3,rep,name=authorID,proto3" json:"authorID,omitempty"`
	Audio         []string               `protobuf:"bytes,4,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,5,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,6,rep,name=video,proto3" json:"video,omitempty"`
	Release       string                 `protobuf:"bytes,7,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,8,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,10,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLitWorkResponse) Reset() {
	*x = AddLitWorkResponse{}
	mi := &file_contest_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLitWorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLitWorkResponse) ProtoMessage() {}

func (x *AddLitWorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLitWorkResponse.ProtoReflect.Descriptor instead.
func (*AddLitWorkResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{13}
}

func (x *AddLitWorkResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddLitWorkResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddLitWorkResponse) GetAuthorID() []string {
	if x != nil {
		return x.AuthorID
	}
	return nil
}

func (x *AddLitWorkResponse) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AddLitWorkResponse) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *AddLitWorkResponse) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *AddLitWorkResponse) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *AddLitWorkResponse) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *AddLitWorkResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddLitWorkResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddLitWorkResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddLitWorkResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddLitWorkResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Project and CreateProject
type Project struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle    string                 `protobuf:"bytes,3,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	Finish        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=finish,proto3" json:"finish,omitempty"`
	Event         []string               `protobuf:"bytes,6,rep,name=event,proto3" json:"event,omitempty"`
	Active        bool                   `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	AppId         string                 `protobuf:"bytes,15,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OwnerId       string                 `protobuf:"bytes,16,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_contest_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{14}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Project) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *Project) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Project) GetFinish() *timestamppb.Timestamp {
	if x != nil {
		return x.Finish
	}
	return nil
}

func (x *Project) GetEvent() []string {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Project) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Project) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Project) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Project) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Project) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Project) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Rate and CreateRate
type Rate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RateBookId    string                 `protobuf:"bytes,2,opt,name=rate_book_id,json=rateBookId,proto3" json:"rate_book_id,omitempty"`
	Rate          int32                  `protobuf:"varint,3,opt,name=rate,proto3" json:"rate,omitempty"`
	Jury          string                 `protobuf:"bytes,5,opt,name=jury,proto3" json:"jury,omitempty"`
	Active        bool                   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	AppId         string                 `protobuf:"bytes,15,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OwnerId       string                 `protobuf:"bytes,16,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rate) Reset() {
	*x = Rate{}
	mi := &file_contest_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rate) ProtoMessage() {}

func (x *Rate) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rate.ProtoReflect.Descriptor instead.
func (*Rate) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{15}
}

func (x *Rate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rate) GetRateBookId() string {
	if x != nil {
		return x.RateBookId
	}
	return ""
}

func (x *Rate) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *Rate) GetJury() string {
	if x != nil {
		return x.Jury
	}
	return ""
}

func (x *Rate) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Rate) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Rate) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Rate) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Rate) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Rate) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// RateBook and CreateRateBook
type RateBook struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContentApp    string                 `protobuf:"bytes,2,opt,name=content_app,json=contentApp,proto3" json:"content_app,omitempty"`
	SongId        string                 `protobuf:"bytes,3,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,4,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Level         int32                  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Active        bool                   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	AppId         string                 `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OwnerId       string                 `protobuf:"bytes,8,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateBook) Reset() {
	*x = RateBook{}
	mi := &file_contest_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateBook) ProtoMessage() {}

func (x *RateBook) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateBook.ProtoReflect.Descriptor instead.
func (*RateBook) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{16}
}

func (x *RateBook) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RateBook) GetContentApp() string {
	if x != nil {
		return x.ContentApp
	}
	return ""
}

func (x *RateBook) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

func (x *RateBook) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *RateBook) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RateBook) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *RateBook) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RateBook) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *RateBook) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *RateBook) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *RateBook) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type FullContent struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date               *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition        *Project               `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	Author             *Person                `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	RateBook           *RateBook              `protobuf:"bytes,5,opt,name=rate_book,json=rateBook,proto3" json:"rate_book,omitempty"`
	Song               []*Song                `protobuf:"bytes,6,rep,name=song,proto3" json:"song,omitempty"`
	ArtistSongOwn      []*Artist              `protobuf:"bytes,7,rep,name=artist_song_own,json=artistSongOwn,proto3" json:"artist_song_own,omitempty"`
	RateBookSongOwn    []*Rate                `protobuf:"bytes,8,rep,name=rate_book_song_own,json=rateBookSongOwn,proto3" json:"rate_book_song_own,omitempty"`
	LitWork            []*LitWork             `protobuf:"bytes,10,rep,name=lit_work,json=litWork,proto3" json:"lit_work,omitempty"`
	ArtistSongRemake   []*Artist              `protobuf:"bytes,11,rep,name=artist_song_remake,json=artistSongRemake,proto3" json:"artist_song_remake,omitempty"`
	RateBookSongRemake []*Rate                `protobuf:"bytes,12,rep,name=rate_book_song_remake,json=rateBookSongRemake,proto3" json:"rate_book_song_remake,omitempty"`
	Sort               int32                  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	Status             int32                  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	Active             bool                   `protobuf:"varint,15,opt,name=active,proto3" json:"active,omitempty"`
	AppId              string                 `protobuf:"bytes,16,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OwnerId            string                 `protobuf:"bytes,17,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created            *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created,proto3" json:"created,omitempty"`
	Updated            *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires            *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FullContent) Reset() {
	*x = FullContent{}
	mi := &file_contest_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullContent) ProtoMessage() {}

func (x *FullContent) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullContent.ProtoReflect.Descriptor instead.
func (*FullContent) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{17}
}

func (x *FullContent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FullContent) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *FullContent) GetCompetition() *Project {
	if x != nil {
		return x.Competition
	}
	return nil
}

func (x *FullContent) GetAuthor() *Person {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *FullContent) GetRateBook() *RateBook {
	if x != nil {
		return x.RateBook
	}
	return nil
}

func (x *FullContent) GetSong() []*Song {
	if x != nil {
		return x.Song
	}
	return nil
}

func (x *FullContent) GetArtistSongOwn() []*Artist {
	if x != nil {
		return x.ArtistSongOwn
	}
	return nil
}

func (x *FullContent) GetRateBookSongOwn() []*Rate {
	if x != nil {
		return x.RateBookSongOwn
	}
	return nil
}

func (x *FullContent) GetLitWork() []*LitWork {
	if x != nil {
		return x.LitWork
	}
	return nil
}

func (x *FullContent) GetArtistSongRemake() []*Artist {
	if x != nil {
		return x.ArtistSongRemake
	}
	return nil
}

func (x *FullContent) GetRateBookSongRemake() []*Rate {
	if x != nil {
		return x.RateBookSongRemake
	}
	return nil
}

func (x *FullContent) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *FullContent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FullContent) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *FullContent) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FullContent) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *FullContent) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *FullContent) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *FullContent) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Team
type Team struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Person        []*Person              `protobuf:"bytes,2,rep,name=person,proto3" json:"person,omitempty"`
	ArtistId      string                 `protobuf:"bytes,3,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Active        bool                   `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Team) Reset() {
	*x = Team{}
	mi := &file_contest_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{18}
}

func (x *Team) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Team) GetPerson() []*Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *Team) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *Team) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Team) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Team) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Team) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Team) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Team) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

var File_contest_proto protoreflect.FileDescriptor

const file_contest_proto_rawDesc = "" +
	"\n" +
	"\rcontest.proto\x12\acontest\x1a\x1fgoogle/protobuf/timestamp.proto\"\xce\x03\n" +
	"\x06Person\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\x1f\n" +
	"\vmiddle_name\x18\x04 \x01(\tR\n" +
	"middleName\x12\x14\n" +
	"\x05phone\x18\x05 \x03(\tR\x05phone\x12\x14\n" +
	"\x05email\x18\x06 \x03(\tR\x05email\x12\x10\n" +
	"\x03bio\x18\a \x01(\tR\x03bio\x12\x12\n" +
	"\x04city\x18\b \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\n" +
	" \x01(\tR\acountry\x12\x16\n" +
	"\x06active\x18\v \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xc8\x03\n" +
	"\x10AddPersonRequest\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\x1f\n" +
	"\vmiddle_name\x18\x04 \x01(\tR\n" +
	"middleName\x12\x14\n" +
	"\x05phone\x18\x05 \x03(\tR\x05phone\x12\x14\n" +
	"\x05email\x18\x06 \x03(\tR\x05email\x12\x10\n" +
	"\x03bio\x18\a \x01(\tR\x03bio\x12\x12\n" +
	"\x04city\x18\b \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\n" +
	" \x01(\tR\acountry\x12\x16\n" +
	"\x06active\x18\v \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xd9\x03\n" +
	"\x11AddPersonResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\x1f\n" +
	"\vmiddle_name\x18\x04 \x01(\tR\n" +
	"middleName\x12\x14\n" +
	"\x05phone\x18\x05 \x03(\tR\x05phone\x12\x14\n" +
	"\x05email\x18\x06 \x03(\tR\x05email\x12\x10\n" +
	"\x03bio\x18\a \x01(\tR\x03bio\x12\x12\n" +
	"\x04city\x18\b \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\n" +
	" \x01(\tR\acountry\x12\x16\n" +
	"\x06active\x18\v \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xb3\x04\n" +
	"\x11AddContestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vcompetition\x18\x03 \x01(\tR\vcompetition\x12\x1b\n" +
	"\tauthor_id\x18\x05 \x01(\tR\bauthorId\x12\x1b\n" +
	"\tartist_id\x18\x06 \x01(\tR\bartistId\x12\x1e\n" +
	"\vsong_own_id\x18\a \x01(\tR\tsongOwnId\x12$\n" +
	"\x0esong_remake_id\x18\b \x01(\tR\fsongRemakeId\x12\x1e\n" +
	"\vlit_work_id\x18\t \x01(\tR\tlitWorkId\x12\x12\n" +
	"\x04sort\x18\n" +
	" \x01(\x05R\x04sort\x12\x1b\n" +
	"\trate_book\x18\v \x03(\tR\brateBook\x12\x16\n" +
	"\x06status\x18\f \x01(\x05R\x06status\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xb4\x04\n" +
	"\x12AddContestResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vcompetition\x18\x03 \x01(\tR\vcompetition\x12\x1b\n" +
	"\tauthor_id\x18\x05 \x01(\tR\bauthorId\x12\x1b\n" +
	"\tartist_id\x18\x06 \x01(\tR\bartistId\x12\x1e\n" +
	"\vsong_own_id\x18\a \x01(\tR\tsongOwnId\x12$\n" +
	"\x0esong_remake_id\x18\b \x01(\tR\fsongRemakeId\x12\x1e\n" +
	"\vlit_work_id\x18\t \x01(\tR\tlitWorkId\x12\x12\n" +
	"\x04sort\x18\n" +
	" \x01(\x05R\x04sort\x12\x1b\n" +
	"\trate_book\x18\v \x03(\tR\brateBook\x12\x16\n" +
	"\x06status\x18\f \x01(\x05R\x06status\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x84\x04\n" +
	"\x06Artist\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1f\n" +
	"\vshort_title\x18\x03 \x01(\tR\n" +
	"shortTitle\x12\x12\n" +
	"\x04type\x18\x04 \x03(\tR\x04type\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\x06 \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\a \x01(\tR\acountry\x12\x12\n" +
	"\x04site\x18\b \x01(\tR\x04site\x12\x14\n" +
	"\x05photo\x18\t \x03(\tR\x05photo\x12\x10\n" +
	"\x03bio\x18\n" +
	" \x01(\tR\x03bio\x12\x1a\n" +
	"\bsocmedia\x18\v \x03(\tR\bsocmedia\x12\x18\n" +
	"\arelease\x18\f \x03(\tR\arelease\x12\x12\n" +
	"\x04team\x18\r \x03(\tR\x04team\x12\x16\n" +
	"\x06active\x18\x0e \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xfe\x03\n" +
	"\x10AddArtistRequest\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1f\n" +
	"\vshort_title\x18\x03 \x01(\tR\n" +
	"shortTitle\x12\x12\n" +
	"\x04type\x18\x04 \x03(\tR\x04type\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\x06 \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\a \x01(\tR\acountry\x12\x12\n" +
	"\x04site\x18\b \x01(\tR\x04site\x12\x14\n" +
	"\x05photo\x18\t \x03(\tR\x05photo\x12\x10\n" +
	"\x03bio\x18\n" +
	" \x01(\tR\x03bio\x12\x1a\n" +
	"\bsocmedia\x18\v \x03(\tR\bsocmedia\x12\x18\n" +
	"\arelease\x18\f \x03(\tR\arelease\x12\x12\n" +
	"\x04team\x18\r \x03(\tR\x04team\x12\x16\n" +
	"\x06active\x18\x0e \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x8f\x04\n" +
	"\x11AddArtistResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1f\n" +
	"\vshort_title\x18\x03 \x01(\tR\n" +
	"shortTitle\x12\x12\n" +
	"\x04type\x18\x04 \x03(\tR\x04type\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\x06 \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\a \x01(\tR\acountry\x12\x12\n" +
	"\x04site\x18\b \x01(\tR\x04site\x12\x14\n" +
	"\x05photo\x18\t \x03(\tR\x05photo\x12\x10\n" +
	"\x03bio\x18\n" +
	" \x01(\tR\x03bio\x12\x1a\n" +
	"\bsocmedia\x18\v \x03(\tR\bsocmedia\x12\x18\n" +
	"\arelease\x18\f \x03(\tR\arelease\x12\x12\n" +
	"\x04team\x18\r \x03(\tR\x04team\x12\x16\n" +
	"\x06active\x18\x0e \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x81\x04\n" +
	"\x04Song\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06artist\x18\x02 \x03(\tR\x06artist\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12#\n" +
	"\rauthor_lyrics\x18\x04 \x03(\tR\fauthorLyrics\x12!\n" +
	"\fauthor_music\x18\x05 \x03(\tR\vauthorMusic\x12\x1a\n" +
	"\barranger\x18\x06 \x03(\tR\barranger\x12\x14\n" +
	"\x05audio\x18\a \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\b \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\t \x03(\tR\x05video\x12\x10\n" +
	"\x03pts\x18\n" +
	" \x03(\tR\x03pts\x12\x18\n" +
	"\arelease\x18\v \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\f \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xfb\x03\n" +
	"\x0eAddSongRequest\x12\x16\n" +
	"\x06artist\x18\x02 \x03(\tR\x06artist\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12#\n" +
	"\rauthor_lyrics\x18\x04 \x03(\tR\fauthorLyrics\x12!\n" +
	"\fauthor_music\x18\x05 \x03(\tR\vauthorMusic\x12\x1a\n" +
	"\barranger\x18\x06 \x03(\tR\barranger\x12\x14\n" +
	"\x05audio\x18\a \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\b \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\t \x03(\tR\x05video\x12\x10\n" +
	"\x03pts\x18\n" +
	" \x03(\tR\x03pts\x12\x18\n" +
	"\arelease\x18\v \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\f \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x8c\x04\n" +
	"\x0fAddSongResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06artist\x18\x02 \x03(\tR\x06artist\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12#\n" +
	"\rauthor_lyrics\x18\x04 \x03(\tR\fauthorLyrics\x12!\n" +
	"\fauthor_music\x18\x05 \x03(\tR\vauthorMusic\x12\x1a\n" +
	"\barranger\x18\x06 \x03(\tR\barranger\x12\x14\n" +
	"\x05audio\x18\a \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\b \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\t \x03(\tR\x05video\x12\x10\n" +
	"\x03pts\x18\n" +
	" \x03(\tR\x03pts\x12\x18\n" +
	"\arelease\x18\v \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\f \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x92\x03\n" +
	"\aLitWork\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1a\n" +
	"\bauthorID\x18\x03 \x03(\tR\bauthorID\x12\x14\n" +
	"\x05audio\x18\x04 \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\x05 \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\x06 \x03(\tR\x05video\x12\x18\n" +
	"\arelease\x18\a \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\b \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\n" +
	" \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x8c\x03\n" +
	"\x11AddLitWorkRequest\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1a\n" +
	"\bauthorID\x18\x03 \x03(\tR\bauthorID\x12\x14\n" +
	"\x05audio\x18\x04 \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\x05 \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\x06 \x03(\tR\x05video\x12\x18\n" +
	"\arelease\x18\a \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\b \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\n" +
	" \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x9d\x03\n" +
	"\x12AddLitWorkResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1a\n" +
	"\bauthorID\x18\x03 \x03(\tR\bauthorID\x12\x14\n" +
	"\x05audio\x18\x04 \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\x05 \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\x06 \x03(\tR\x05video\x12\x18\n" +
	"\arelease\x18\a \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\b \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\n" +
	" \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xb8\x03\n" +
	"\aProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1f\n" +
	"\vshort_title\x18\x03 \x01(\tR\n" +
	"shortTitle\x120\n" +
	"\x05start\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x122\n" +
	"\x06finish\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06finish\x12\x14\n" +
	"\x05event\x18\x06 \x03(\tR\x05event\x12\x16\n" +
	"\x06active\x18\a \x01(\bR\x06active\x12\x15\n" +
	"\x06app_id\x18\x0f \x01(\tR\x05appId\x12\x19\n" +
	"\bowner_id\x18\x10 \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xcc\x02\n" +
	"\x04Rate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\frate_book_id\x18\x02 \x01(\tR\n" +
	"rateBookId\x12\x12\n" +
	"\x04rate\x18\x03 \x01(\x05R\x04rate\x12\x12\n" +
	"\x04jury\x18\x05 \x01(\tR\x04jury\x12\x16\n" +
	"\x06active\x18\x06 \x01(\bR\x06active\x12\x15\n" +
	"\x06app_id\x18\x0f \x01(\tR\x05appId\x12\x19\n" +
	"\bowner_id\x18\x10 \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xf6\x02\n" +
	"\bRateBook\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vcontent_app\x18\x02 \x01(\tR\n" +
	"contentApp\x12\x17\n" +
	"\asong_id\x18\x03 \x01(\tR\x06songId\x12\x1e\n" +
	"\vlit_work_id\x18\x04 \x01(\tR\tlitWorkId\x12\x14\n" +
	"\x05level\x18\x05 \x01(\x05R\x05level\x12\x16\n" +
	"\x06active\x18\x06 \x01(\bR\x06active\x12\x15\n" +
	"\x06app_id\x18\a \x01(\tR\x05appId\x12\x19\n" +
	"\bowner_id\x18\b \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xb8\x06\n" +
	"\vFullContent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x122\n" +
	"\vcompetition\x18\x03 \x01(\v2\x10.contest.ProjectR\vcompetition\x12'\n" +
	"\x06author\x18\x04 \x01(\v2\x0f.contest.PersonR\x06author\x12.\n" +
	"\trate_book\x18\x05 \x01(\v2\x11.contest.RateBookR\brateBook\x12!\n" +
	"\x04song\x18\x06 \x03(\v2\r.contest.SongR\x04song\x127\n" +
	"\x0fartist_song_own\x18\a \x03(\v2\x0f.contest.ArtistR\rartistSongOwn\x12:\n" +
	"\x12rate_book_song_own\x18\b \x03(\v2\r.contest.RateR\x0frateBookSongOwn\x12+\n" +
	"\blit_work\x18\n" +
	" \x03(\v2\x10.contest.LitWorkR\alitWork\x12=\n" +
	"\x12artist_song_remake\x18\v \x03(\v2\x0f.contest.ArtistR\x10artistSongRemake\x12@\n" +
	"\x15rate_book_song_remake\x18\f \x03(\v2\r.contest.RateR\x12rateBookSongRemake\x12\x12\n" +
	"\x04sort\x18\r \x01(\x05R\x04sort\x12\x16\n" +
	"\x06status\x18\x0e \x01(\x05R\x06status\x12\x16\n" +
	"\x06active\x18\x0f \x01(\bR\x06active\x12\x15\n" +
	"\x06app_id\x18\x10 \x01(\tR\x05appId\x12\x19\n" +
	"\bowner_id\x18\x11 \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xc9\x02\n" +
	"\x04Team\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x06person\x18\x02 \x03(\v2\x0f.contest.PersonR\x06person\x12\x1b\n" +
	"\tartist_id\x18\x03 \x01(\tR\bartistId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x16\n" +
	"\x06active\x18\x05 \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x06 \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\aexpires2\xdd\x02\n" +
	"\aContest\x12E\n" +
	"\n" +
	"AddContest\x12\x1a.contest.AddContestRequest\x1a\x1b.contest.AddContestResponse\x12B\n" +
	"\tAddPerson\x12\x19.contest.AddPersonRequest\x1a\x1a.contest.AddPersonResponse\x12B\n" +
	"\tAddArtist\x12\x19.contest.AddArtistRequest\x1a\x1a.contest.AddArtistResponse\x12<\n" +
	"\aAddSong\x12\x17.contest.AddSongRequest\x1a\x18.contest.AddSongResponse\x12E\n" +
	"\n" +
	"AddLitWork\x12\x1a.contest.AddLitWorkRequest\x1a\x1b.contest.AddLitWorkResponseB3Z1github.com/erkkipm/contest_proto/gen/go;contestV1b\x06proto3"

var (
	file_contest_proto_rawDescOnce sync.Once
	file_contest_proto_rawDescData []byte
)

func file_contest_proto_rawDescGZIP() []byte {
	file_contest_proto_rawDescOnce.Do(func() {
		file_contest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contest_proto_rawDesc), len(file_contest_proto_rawDesc)))
	})
	return file_contest_proto_rawDescData
}

var file_contest_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_contest_proto_goTypes = []any{
	(*Person)(nil),                // 0: contest.Person
	(*AddPersonRequest)(nil),      // 1: contest.AddPersonRequest
	(*AddPersonResponse)(nil),     // 2: contest.AddPersonResponse
	(*AddContestRequest)(nil),     // 3: contest.AddContestRequest
	(*AddContestResponse)(nil),    // 4: contest.AddContestResponse
	(*Artist)(nil),                // 5: contest.Artist
	(*AddArtistRequest)(nil),      // 6: contest.AddArtistRequest
	(*AddArtistResponse)(nil),     // 7: contest.AddArtistResponse
	(*Song)(nil),                  // 8: contest.Song
	(*AddSongRequest)(nil),        // 9: contest.AddSongRequest
	(*AddSongResponse)(nil),       // 10: contest.AddSongResponse
	(*LitWork)(nil),               // 11: contest.LitWork
	(*AddLitWorkRequest)(nil),     // 12: contest.AddLitWorkRequest
	(*AddLitWorkResponse)(nil),    // 13: contest.AddLitWorkResponse
	(*Project)(nil),               // 14: contest.Project
	(*Rate)(nil),                  // 15: contest.Rate
	(*RateBook)(nil),              // 16: contest.RateBook
	(*FullContent)(nil),           // 17: contest.FullContent
	(*Team)(nil),                  // 18: contest.Team
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
}
var file_contest_proto_depIdxs = []int32{
	19, // 0: contest.Person.created:type_name -> google.protobuf.Timestamp
	19, // 1: contest.Person.updated:type_name -> google.protobuf.Timestamp
	19, // 2: contest.Person.expires:type_name -> google.protobuf.Timestamp
	19, // 3: contest.AddPersonRequest.created:type_name -> google.protobuf.Timestamp
	19, // 4: contest.AddPersonRequest.updated:type_name -> google.protobuf.Timestamp
	19, // 5: contest.AddPersonRequest.expires:type_name -> google.protobuf.Timestamp
	19, // 6: contest.AddPersonResponse.created:type_name -> google.protobuf.Timestamp
	19, // 7: contest.AddPersonResponse.updated:type_name -> google.protobuf.Timestamp
	19, // 8: contest.AddPersonResponse.expires:type_name -> google.protobuf.Timestamp
	19, // 9: contest.AddContestRequest.date:type_name -> google.protobuf.Timestamp
	19, // 10: contest.AddContestRequest.created:type_name -> google.protobuf.Timestamp
	19, // 11: contest.AddContestRequest.updated:type_name -> google.protobuf.Timestamp
	19, // 12: contest.AddContestRequest.expires:type_name -> google.protobuf.Timestamp
	19, // 13: contest.AddContestResponse.date:type_name -> google.protobuf.Timestamp
	19, // 14: contest.AddContestResponse.created:type_name -> google.protobuf.Timestamp
	19, // 15: contest.AddContestResponse.updated:type_name -> google.protobuf.Timestamp
	19, // 16: contest.AddContestResponse.expires:type_name -> google.protobuf.Timestamp
	19, // 17: contest.Artist.created:type_name -> google.protobuf.Timestamp
	19, // 18: contest.Artist.updated:type_name -> google.protobuf.Timestamp
	19, // 19: contest.Artist.expires:type_name -> google.protobuf.Timestamp
	19, // 20: contest.AddArtistRequest.created:type_name -> google.protobuf.Timestamp
	19, // 21: contest.AddArtistRequest.updated:type_name -> google.protobuf.Timestamp
	19, // 22: contest.AddArtistRequest.expires:type_name -> google.protobuf.Timestamp
	19, // 23: contest.AddArtistResponse.created:type_name -> google.protobuf.Timestamp
	19, // 24: contest.AddArtistResponse.updated:type_name -> google.protobuf.Timestamp
	19, // 25: contest.AddArtistResponse.expires:type_name -> google.protobuf.Timestamp
	19, // 26: contest.Song.created:type_name -> google.protobuf.Timestamp
	19, // 27: contest.Song.updated:type_name -> google.protobuf.Timestamp
	19, // 28: contest.Song.expires:type_name -> google.protobuf.Timestamp
	19, // 29: contest.AddSongRequest.created:type_name -> google.protobuf.Timestamp
	19, // 30: contest.AddSongRequest.updated:type_name -> google.protobuf.Timestamp
	19, // 31: contest.AddSongRequest.expires:type_name -> google.protobuf.Timestamp
	19, // 32: contest.AddSongResponse.created:type_name -> google.protobuf.Timestamp
	19, // 33: contest.AddSongResponse.updated:type_name -> google.protobuf.Timestamp
	19, // 34: contest.AddSongResponse.expires:type_name -> google.protobuf.Timestamp
	19, // 35: contest.LitWork.created:type_name -> google.protobuf.Timestamp
	19, // 36: contest.LitWork.updated:type_name -> google.protobuf.Timestamp
	19, // 37: contest.LitWork.expires:type_name -> google.protobuf.Timestamp
	19, // 38: contest.AddLitWorkRequest.created:type_name -> google.protobuf.Timestamp
	19, // 39: contest.AddLitWorkRequest.updated:type_name -> google.protobuf.Timestamp
	19, // 40: contest.AddLitWorkRequest.expires:type_name -> google.protobuf.Timestamp
	19, // 41: contest.AddLitWorkResponse.created:type_name -> google.protobuf.Timestamp
	19, // 42: contest.AddLitWorkResponse.updated:type_name -> google.protobuf.Timestamp
	19, // 43: contest.AddLitWorkResponse.expires:type_name -> google.protobuf.Timestamp
	19, // 44: contest.Project.start:type_name -> google.protobuf.Timestamp
	19, // 45: contest.Project.finish:type_name -> google.protobuf.Timestamp
	19, // 46: contest.Project.created:type_name -> google.protobuf.Timestamp
	19, // 47: contest.Project.updated:type_name -> google.protobuf.Timestamp
	19, // 48: contest.Project.expires:type_name -> google.protobuf.Timestamp
	19, // 49: contest.Rate.created:type_name -> google.protobuf.Timestamp
	19, // 50: contest.Rate.updated:type_name -> google.protobuf.Timestamp
	19, // 51: contest.Rate.expires:type_name -> google.protobuf.Timestamp
	19, // 52: contest.RateBook.created:type_name -> google.protobuf.Timestamp
	19, // 53: contest.RateBook.updated:type_name -> google.protobuf.Timestamp
	19, // 54: contest.RateBook.expires:type_name -> google.protobuf.Timestamp
	19, // 55: contest.FullContent.date:type_name -> google.protobuf.Timestamp
	14, // 56: contest.FullContent.competition:type_name -> contest.Project
	0,  // 57: contest.FullContent.author:type_name -> contest.Person
	16, // 58: contest.FullContent.rate_book:type_name -> contest.RateBook
	8,  // 59: contest.FullContent.song:type_name -> contest.Song
	5,  // 60: contest.FullContent.artist_song_own:type_name -> contest.Artist
	15, // 61: contest.FullContent.rate_book_song_own:type_name -> contest.Rate
	11, // 62: contest.FullContent.lit_work:type_name -> contest.LitWork
	5,  // 63: contest.FullContent.artist_song_remake:type_name -> contest.Artist
	15, // 64: contest.FullContent.rate_book_song_remake:type_name -> contest.Rate
	19, // 65: contest.FullContent.created:type_name -> google.protobuf.Timestamp
	19, // 66: contest.FullContent.updated:type_name -> google.protobuf.Timestamp
	19, // 67: contest.FullContent.expires:type_name -> google.protobuf.Timestamp
	0,  // 68: contest.Team.person:type_name -> contest.Person
	19, // 69: contest.Team.created:type_name -> google.protobuf.Timestamp
	19, // 70: contest.Team.updated:type_name -> google.protobuf.Timestamp
	19, // 71: contest.Team.expires:type_name -> google.protobuf.Timestamp
	3,  // 72: contest.Contest.AddContest:input_type -> contest.AddContestRequest
	1,  // 73: contest.Contest.AddPerson:input_type -> contest.AddPersonRequest
	6,  // 74: contest.Contest.AddArtist:input_type -> contest.AddArtistRequest
	9,  // 75: contest.Contest.AddSong:input_type -> contest.AddSongRequest
	12, // 76: contest.Contest.AddLitWork:input_type -> contest.AddLitWorkRequest
	4,  // 77: contest.Contest.AddContest:output_type -> contest.AddContestResponse
	2,  // 78: contest.Contest.AddPerson:output_type -> contest.AddPersonResponse
	7,  // 79: contest.Contest.AddArtist:output_type -> contest.AddArtistResponse
	10, // 80: contest.Contest.AddSong:output_type -> contest.AddSongResponse
	13, // 81: contest.Contest.AddLitWork:output_type -> contest.AddLitWorkResponse
	77, // [77:82] is the sub-list for method output_type
	72, // [72:77] is the sub-list for method input_type
	72, // [72:72] is the sub-list for extension type_name
	72, // [72:72] is the sub-list for extension extendee
	0,  // [0:72] is the sub-list for field type_name
}

func init() { file_contest_proto_init() }
func file_contest_proto_init() {
	if File_contest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contest_proto_rawDesc), len(file_contest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contest_proto_goTypes,
		DependencyIndexes: file_contest_proto_depIdxs,
		MessageInfos:      file_contest_proto_msgTypes,
	}.Build()
	File_contest_proto = out.File
	file_contest_proto_goTypes = nil
	file_contest_proto_depIdxs = nil
}
