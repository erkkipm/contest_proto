// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: contest.proto

// Текущий пакет - указывает пространство имен для сервиса и сообщений.

package contestV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Contest
type OneContest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition   string                 `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	AuthorId      string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ArtistId      string                 `protobuf:"bytes,6,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	SongOwnId     string                 `protobuf:"bytes,7,opt,name=song_own_id,json=songOwnId,proto3" json:"song_own_id,omitempty"`
	SongRemakeId  string                 `protobuf:"bytes,8,opt,name=song_remake_id,json=songRemakeId,proto3" json:"song_remake_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,9,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Sort          int32                  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	RateBook      []string               `protobuf:"bytes,11,rep,name=rate_book,json=rateBook,proto3" json:"rate_book,omitempty"`
	Status        int32                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OneContest) Reset() {
	*x = OneContest{}
	mi := &file_contest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OneContest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneContest) ProtoMessage() {}

func (x *OneContest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneContest.ProtoReflect.Descriptor instead.
func (*OneContest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{0}
}

func (x *OneContest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OneContest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *OneContest) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *OneContest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *OneContest) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *OneContest) GetSongOwnId() string {
	if x != nil {
		return x.SongOwnId
	}
	return ""
}

func (x *OneContest) GetSongRemakeId() string {
	if x != nil {
		return x.SongRemakeId
	}
	return ""
}

func (x *OneContest) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *OneContest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *OneContest) GetRateBook() []string {
	if x != nil {
		return x.RateBook
	}
	return nil
}

func (x *OneContest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OneContest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *OneContest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *OneContest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *OneContest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *OneContest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// FullContent ... полная заявка
type FullContent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date             *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition      string                 `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	CompetitionId    string                 `protobuf:"bytes,4,opt,name=competition_id,json=competitionId,proto3" json:"competition_id,omitempty"`
	Category         string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Author           *Person                `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	Song             []*Song                `protobuf:"bytes,8,rep,name=song,proto3" json:"song,omitempty"`
	ArtistSongOwn    []*Artist              `protobuf:"bytes,9,rep,name=artist_song_own,json=artistSongOwn,proto3" json:"artist_song_own,omitempty"`
	LitWork          []*LitWork             `protobuf:"bytes,11,rep,name=lit_work,json=litWork,proto3" json:"lit_work,omitempty"`
	ArtistSongRemake []*Artist              `protobuf:"bytes,12,rep,name=artist_song_remake,json=artistSongRemake,proto3" json:"artist_song_remake,omitempty"`
	Rate             []*Rate                `protobuf:"bytes,13,rep,name=rate,proto3" json:"rate,omitempty"`
	Sort             int32                  `protobuf:"varint,14,opt,name=sort,proto3" json:"sort,omitempty"`
	Status           int32                  `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	Active           bool                   `protobuf:"varint,16,opt,name=active,proto3" json:"active,omitempty"`
	AppId            string                 `protobuf:"bytes,17,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OwnerId          string                 `protobuf:"bytes,18,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created          *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=created,proto3" json:"created,omitempty"`
	Updated          *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires          *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FullContent) Reset() {
	*x = FullContent{}
	mi := &file_contest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullContent) ProtoMessage() {}

func (x *FullContent) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullContent.ProtoReflect.Descriptor instead.
func (*FullContent) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{1}
}

func (x *FullContent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FullContent) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *FullContent) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *FullContent) GetCompetitionId() string {
	if x != nil {
		return x.CompetitionId
	}
	return ""
}

func (x *FullContent) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *FullContent) GetAuthor() *Person {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *FullContent) GetSong() []*Song {
	if x != nil {
		return x.Song
	}
	return nil
}

func (x *FullContent) GetArtistSongOwn() []*Artist {
	if x != nil {
		return x.ArtistSongOwn
	}
	return nil
}

func (x *FullContent) GetLitWork() []*LitWork {
	if x != nil {
		return x.LitWork
	}
	return nil
}

func (x *FullContent) GetArtistSongRemake() []*Artist {
	if x != nil {
		return x.ArtistSongRemake
	}
	return nil
}

func (x *FullContent) GetRate() []*Rate {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *FullContent) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *FullContent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FullContent) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *FullContent) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FullContent) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *FullContent) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *FullContent) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *FullContent) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Person
type Person struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName  string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName   string                 `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName string                 `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Phone      []string               `protobuf:"bytes,5,rep,name=phone,proto3" json:"phone,omitempty"`
	Email      []string               `protobuf:"bytes,6,rep,name=email,proto3" json:"email,omitempty"`
	// string login = 7;
	Bio           string                 `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`
	City          string                 `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	Active        bool                   `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_contest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{2}
}

func (x *Person) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Person) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Person) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Person) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *Person) GetPhone() []string {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *Person) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Person) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Person) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Person) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Person) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Person) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Person) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Person) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Person) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Person) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Song
type Song struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Artist        []string               `protobuf:"bytes,2,rep,name=artist,proto3" json:"artist,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	AuthorLyrics  []string               `protobuf:"bytes,4,rep,name=author_lyrics,json=authorLyrics,proto3" json:"author_lyrics,omitempty"`
	AuthorMusic   []string               `protobuf:"bytes,5,rep,name=author_music,json=authorMusic,proto3" json:"author_music,omitempty"`
	Arranger      []string               `protobuf:"bytes,6,rep,name=arranger,proto3" json:"arranger,omitempty"`
	Audio         []string               `protobuf:"bytes,7,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,8,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,9,rep,name=video,proto3" json:"video,omitempty"`
	Pts           []string               `protobuf:"bytes,10,rep,name=pts,proto3" json:"pts,omitempty"`
	Release       string                 `protobuf:"bytes,11,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,12,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Song) Reset() {
	*x = Song{}
	mi := &file_contest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{3}
}

func (x *Song) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Song) GetArtist() []string {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *Song) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Song) GetAuthorLyrics() []string {
	if x != nil {
		return x.AuthorLyrics
	}
	return nil
}

func (x *Song) GetAuthorMusic() []string {
	if x != nil {
		return x.AuthorMusic
	}
	return nil
}

func (x *Song) GetArranger() []string {
	if x != nil {
		return x.Arranger
	}
	return nil
}

func (x *Song) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *Song) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *Song) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Song) GetPts() []string {
	if x != nil {
		return x.Pts
	}
	return nil
}

func (x *Song) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *Song) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *Song) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Song) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Song) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Song) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Song) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Artist
type Artist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle    string                 `protobuf:"bytes,3,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Type          []string               `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	City          string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Site          string                 `protobuf:"bytes,8,opt,name=site,proto3" json:"site,omitempty"`
	Photo         []string               `protobuf:"bytes,9,rep,name=photo,proto3" json:"photo,omitempty"`
	Bio           string                 `protobuf:"bytes,10,opt,name=bio,proto3" json:"bio,omitempty"`
	Socmedia      []string               `protobuf:"bytes,11,rep,name=socmedia,proto3" json:"socmedia,omitempty"`
	Release       []string               `protobuf:"bytes,12,rep,name=release,proto3" json:"release,omitempty"`
	Team          []string               `protobuf:"bytes,13,rep,name=team,proto3" json:"team,omitempty"`
	Active        bool                   `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,15,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artist) Reset() {
	*x = Artist{}
	mi := &file_contest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{4}
}

func (x *Artist) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Artist) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Artist) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *Artist) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Artist) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Artist) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Artist) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Artist) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *Artist) GetPhoto() []string {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *Artist) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Artist) GetSocmedia() []string {
	if x != nil {
		return x.Socmedia
	}
	return nil
}

func (x *Artist) GetRelease() []string {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *Artist) GetTeam() []string {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *Artist) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Artist) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Artist) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Artist) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Artist) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Rate
type Rate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RateBookId    string                 `protobuf:"bytes,2,opt,name=rate_book_id,json=rateBookId,proto3" json:"rate_book_id,omitempty"`
	Rate          int32                  `protobuf:"varint,3,opt,name=rate,proto3" json:"rate,omitempty"`
	Jury          string                 `protobuf:"bytes,5,opt,name=jury,proto3" json:"jury,omitempty"`
	Active        bool                   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	AppId         string                 `protobuf:"bytes,15,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OwnerId       string                 `protobuf:"bytes,16,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rate) Reset() {
	*x = Rate{}
	mi := &file_contest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rate) ProtoMessage() {}

func (x *Rate) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rate.ProtoReflect.Descriptor instead.
func (*Rate) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{5}
}

func (x *Rate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rate) GetRateBookId() string {
	if x != nil {
		return x.RateBookId
	}
	return ""
}

func (x *Rate) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *Rate) GetJury() string {
	if x != nil {
		return x.Jury
	}
	return ""
}

func (x *Rate) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Rate) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Rate) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Rate) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Rate) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Rate) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// RateBook
type RateBook struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContentApp    string                 `protobuf:"bytes,2,opt,name=content_app,json=contentApp,proto3" json:"content_app,omitempty"`
	SongId        string                 `protobuf:"bytes,3,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,4,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Level         int32                  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Active        bool                   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	AppId         string                 `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OwnerId       string                 `protobuf:"bytes,8,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateBook) Reset() {
	*x = RateBook{}
	mi := &file_contest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateBook) ProtoMessage() {}

func (x *RateBook) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateBook.ProtoReflect.Descriptor instead.
func (*RateBook) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{6}
}

func (x *RateBook) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RateBook) GetContentApp() string {
	if x != nil {
		return x.ContentApp
	}
	return ""
}

func (x *RateBook) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

func (x *RateBook) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *RateBook) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RateBook) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *RateBook) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RateBook) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *RateBook) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *RateBook) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *RateBook) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// Litwork - Литературное произведение
type LitWork struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorID      []string               `protobuf:"bytes,3,rep,name=authorID,proto3" json:"authorID,omitempty"`
	Audio         []string               `protobuf:"bytes,4,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,5,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,6,rep,name=video,proto3" json:"video,omitempty"`
	Release       string                 `protobuf:"bytes,7,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,8,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,10,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LitWork) Reset() {
	*x = LitWork{}
	mi := &file_contest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LitWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LitWork) ProtoMessage() {}

func (x *LitWork) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LitWork.ProtoReflect.Descriptor instead.
func (*LitWork) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{7}
}

func (x *LitWork) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LitWork) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LitWork) GetAuthorID() []string {
	if x != nil {
		return x.AuthorID
	}
	return nil
}

func (x *LitWork) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *LitWork) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *LitWork) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *LitWork) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *LitWork) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *LitWork) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *LitWork) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *LitWork) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *LitWork) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *LitWork) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// CONTEST = ADD
type AddContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition   string                 `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	AuthorId      string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ArtistId      string                 `protobuf:"bytes,6,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	SongOwnId     string                 `protobuf:"bytes,7,opt,name=song_own_id,json=songOwnId,proto3" json:"song_own_id,omitempty"`
	SongRemakeId  string                 `protobuf:"bytes,8,opt,name=song_remake_id,json=songRemakeId,proto3" json:"song_remake_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,9,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Sort          int32                  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	RateBook      []string               `protobuf:"bytes,11,rep,name=rate_book,json=rateBook,proto3" json:"rate_book,omitempty"`
	Status        int32                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddContestRequest) Reset() {
	*x = AddContestRequest{}
	mi := &file_contest_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContestRequest) ProtoMessage() {}

func (x *AddContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContestRequest.ProtoReflect.Descriptor instead.
func (*AddContestRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{8}
}

func (x *AddContestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddContestRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AddContestRequest) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *AddContestRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *AddContestRequest) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *AddContestRequest) GetSongOwnId() string {
	if x != nil {
		return x.SongOwnId
	}
	return ""
}

func (x *AddContestRequest) GetSongRemakeId() string {
	if x != nil {
		return x.SongRemakeId
	}
	return ""
}

func (x *AddContestRequest) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *AddContestRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddContestRequest) GetRateBook() []string {
	if x != nil {
		return x.RateBook
	}
	return nil
}

func (x *AddContestRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddContestRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddContestRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddContestRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddContestRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddContestRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddContestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition   string                 `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	AuthorId      string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ArtistId      string                 `protobuf:"bytes,6,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	SongOwnId     string                 `protobuf:"bytes,7,opt,name=song_own_id,json=songOwnId,proto3" json:"song_own_id,omitempty"`
	SongRemakeId  string                 `protobuf:"bytes,8,opt,name=song_remake_id,json=songRemakeId,proto3" json:"song_remake_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,9,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Sort          int32                  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	RateBook      []string               `protobuf:"bytes,11,rep,name=rate_book,json=rateBook,proto3" json:"rate_book,omitempty"`
	Status        int32                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddContestResponse) Reset() {
	*x = AddContestResponse{}
	mi := &file_contest_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContestResponse) ProtoMessage() {}

func (x *AddContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContestResponse.ProtoReflect.Descriptor instead.
func (*AddContestResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{9}
}

func (x *AddContestResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddContestResponse) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AddContestResponse) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *AddContestResponse) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *AddContestResponse) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *AddContestResponse) GetSongOwnId() string {
	if x != nil {
		return x.SongOwnId
	}
	return ""
}

func (x *AddContestResponse) GetSongRemakeId() string {
	if x != nil {
		return x.SongRemakeId
	}
	return ""
}

func (x *AddContestResponse) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *AddContestResponse) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddContestResponse) GetRateBook() []string {
	if x != nil {
		return x.RateBook
	}
	return nil
}

func (x *AddContestResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddContestResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddContestResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddContestResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddContestResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddContestResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// CONTEST = GET = ByID
type GetContestByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestByIDRequest) Reset() {
	*x = GetContestByIDRequest{}
	mi := &file_contest_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestByIDRequest) ProtoMessage() {}

func (x *GetContestByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestByIDRequest.ProtoReflect.Descriptor instead.
func (*GetContestByIDRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{10}
}

func (x *GetContestByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetContestByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contest       *OneContest            `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestByIDResponse) Reset() {
	*x = GetContestByIDResponse{}
	mi := &file_contest_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestByIDResponse) ProtoMessage() {}

func (x *GetContestByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestByIDResponse.ProtoReflect.Descriptor instead.
func (*GetContestByIDResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{11}
}

func (x *GetContestByIDResponse) GetContest() *OneContest {
	if x != nil {
		return x.Contest
	}
	return nil
}

func (x *GetContestByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// CONTEST = GET = ByPersonID
type GetContestByPersonIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PersonId      string                 `protobuf:"bytes,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestByPersonIDRequest) Reset() {
	*x = GetContestByPersonIDRequest{}
	mi := &file_contest_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestByPersonIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestByPersonIDRequest) ProtoMessage() {}

func (x *GetContestByPersonIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestByPersonIDRequest.ProtoReflect.Descriptor instead.
func (*GetContestByPersonIDRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{12}
}

func (x *GetContestByPersonIDRequest) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

type GetContestsByPersonIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contest       *OneContest            `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestsByPersonIDResponse) Reset() {
	*x = GetContestsByPersonIDResponse{}
	mi := &file_contest_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestsByPersonIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestsByPersonIDResponse) ProtoMessage() {}

func (x *GetContestsByPersonIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestsByPersonIDResponse.ProtoReflect.Descriptor instead.
func (*GetContestsByPersonIDResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{13}
}

func (x *GetContestsByPersonIDResponse) GetContest() *OneContest {
	if x != nil {
		return x.Contest
	}
	return nil
}

func (x *GetContestsByPersonIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// CONTEST = GET = With Empty Category
type GetContestWithEmptyCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompetitionId string                 `protobuf:"bytes,1,opt,name=competition_id,json=competitionId,proto3" json:"competition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestWithEmptyCategoryRequest) Reset() {
	*x = GetContestWithEmptyCategoryRequest{}
	mi := &file_contest_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestWithEmptyCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestWithEmptyCategoryRequest) ProtoMessage() {}

func (x *GetContestWithEmptyCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestWithEmptyCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetContestWithEmptyCategoryRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{14}
}

func (x *GetContestWithEmptyCategoryRequest) GetCompetitionId() string {
	if x != nil {
		return x.CompetitionId
	}
	return ""
}

type GetContestWithEmptyCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contest       *FullContent           `protobuf:"bytes,1,opt,name=contest,proto3" json:"contest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestWithEmptyCategoryResponse) Reset() {
	*x = GetContestWithEmptyCategoryResponse{}
	mi := &file_contest_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestWithEmptyCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestWithEmptyCategoryResponse) ProtoMessage() {}

func (x *GetContestWithEmptyCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestWithEmptyCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetContestWithEmptyCategoryResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{15}
}

func (x *GetContestWithEmptyCategoryResponse) GetContest() *FullContent {
	if x != nil {
		return x.Contest
	}
	return nil
}

// CONTESTS = LIST = By Category
type ListContestsByCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // сколько заявок за раз (например, 50)
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"` // с какой позиции (например, 0, 50, 100)
	Competition   string                 `protobuf:"bytes,4,opt,name=competition,proto3" json:"competition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsByCategoryRequest) Reset() {
	*x = ListContestsByCategoryRequest{}
	mi := &file_contest_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsByCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsByCategoryRequest) ProtoMessage() {}

func (x *ListContestsByCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsByCategoryRequest.ProtoReflect.Descriptor instead.
func (*ListContestsByCategoryRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{16}
}

func (x *ListContestsByCategoryRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListContestsByCategoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListContestsByCategoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListContestsByCategoryRequest) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

type ListContestsByCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contests      []*FullContent         `protobuf:"bytes,1,rep,name=contests,proto3" json:"contests,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // <-- всего заявок по этому competition
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsByCategoryResponse) Reset() {
	*x = ListContestsByCategoryResponse{}
	mi := &file_contest_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsByCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsByCategoryResponse) ProtoMessage() {}

func (x *ListContestsByCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsByCategoryResponse.ProtoReflect.Descriptor instead.
func (*ListContestsByCategoryResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{17}
}

func (x *ListContestsByCategoryResponse) GetContests() []*FullContent {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *ListContestsByCategoryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CONTESTS = LIST
type ListContestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Competition   string                 `protobuf:"bytes,1,opt,name=competition,proto3" json:"competition,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // сколько заявок за раз (например, 50)
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"` // с какой позиции (например, 0, 50, 100)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsRequest) Reset() {
	*x = ListContestsRequest{}
	mi := &file_contest_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsRequest) ProtoMessage() {}

func (x *ListContestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsRequest.ProtoReflect.Descriptor instead.
func (*ListContestsRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{18}
}

func (x *ListContestsRequest) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *ListContestsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListContestsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListContestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contests      []*FullContent         `protobuf:"bytes,1,rep,name=contests,proto3" json:"contests,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // <-- всего заявок по этому competition
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsResponse) Reset() {
	*x = ListContestsResponse{}
	mi := &file_contest_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsResponse) ProtoMessage() {}

func (x *ListContestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsResponse.ProtoReflect.Descriptor instead.
func (*ListContestsResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{19}
}

func (x *ListContestsResponse) GetContests() []*FullContent {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *ListContestsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CONTESTS = LIST = By Region
type ListContestsByRegionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // сколько заявок за раз (например, 50)
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"` // с какой позиции (например, 0, 50, 100)
	Competition   string                 `protobuf:"bytes,4,opt,name=competition,proto3" json:"competition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsByRegionRequest) Reset() {
	*x = ListContestsByRegionRequest{}
	mi := &file_contest_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsByRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsByRegionRequest) ProtoMessage() {}

func (x *ListContestsByRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsByRegionRequest.ProtoReflect.Descriptor instead.
func (*ListContestsByRegionRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{20}
}

func (x *ListContestsByRegionRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListContestsByRegionRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListContestsByRegionRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListContestsByRegionRequest) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

type ListContestsByRegionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contests      []*FullContent         `protobuf:"bytes,1,rep,name=contests,proto3" json:"contests,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // <-- всего заявок по этому competition
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestsByRegionResponse) Reset() {
	*x = ListContestsByRegionResponse{}
	mi := &file_contest_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestsByRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsByRegionResponse) ProtoMessage() {}

func (x *ListContestsByRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsByRegionResponse.ProtoReflect.Descriptor instead.
func (*ListContestsByRegionResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{21}
}

func (x *ListContestsByRegionResponse) GetContests() []*FullContent {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *ListContestsByRegionResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CONTESTS = UPDATE
type UpdateContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition   string                 `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	AuthorId      string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ArtistId      string                 `protobuf:"bytes,6,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	SongOwnId     string                 `protobuf:"bytes,7,opt,name=song_own_id,json=songOwnId,proto3" json:"song_own_id,omitempty"`
	SongRemakeId  string                 `protobuf:"bytes,8,opt,name=song_remake_id,json=songRemakeId,proto3" json:"song_remake_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,9,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Sort          int32                  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	RateBook      []string               `protobuf:"bytes,11,rep,name=rate_book,json=rateBook,proto3" json:"rate_book,omitempty"`
	Status        int32                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Category      string                 `protobuf:"bytes,13,opt,name=category,proto3" json:"category,omitempty"`
	Active        bool                   `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,15,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContestRequest) Reset() {
	*x = UpdateContestRequest{}
	mi := &file_contest_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestRequest) ProtoMessage() {}

func (x *UpdateContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestRequest.ProtoReflect.Descriptor instead.
func (*UpdateContestRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateContestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateContestRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *UpdateContestRequest) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *UpdateContestRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *UpdateContestRequest) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *UpdateContestRequest) GetSongOwnId() string {
	if x != nil {
		return x.SongOwnId
	}
	return ""
}

func (x *UpdateContestRequest) GetSongRemakeId() string {
	if x != nil {
		return x.SongRemakeId
	}
	return ""
}

func (x *UpdateContestRequest) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *UpdateContestRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateContestRequest) GetRateBook() []string {
	if x != nil {
		return x.RateBook
	}
	return nil
}

func (x *UpdateContestRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateContestRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateContestRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UpdateContestRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *UpdateContestRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *UpdateContestRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *UpdateContestRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type UpdateContestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Competition   string                 `protobuf:"bytes,3,opt,name=competition,proto3" json:"competition,omitempty"`
	AuthorId      string                 `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	ArtistId      string                 `protobuf:"bytes,6,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	SongOwnId     string                 `protobuf:"bytes,7,opt,name=song_own_id,json=songOwnId,proto3" json:"song_own_id,omitempty"`
	SongRemakeId  string                 `protobuf:"bytes,8,opt,name=song_remake_id,json=songRemakeId,proto3" json:"song_remake_id,omitempty"`
	LitWorkId     string                 `protobuf:"bytes,9,opt,name=lit_work_id,json=litWorkId,proto3" json:"lit_work_id,omitempty"`
	Sort          int32                  `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	RateBook      []string               `protobuf:"bytes,11,rep,name=rate_book,json=rateBook,proto3" json:"rate_book,omitempty"`
	Status        int32                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Category      string                 `protobuf:"bytes,13,opt,name=category,proto3" json:"category,omitempty"`
	Active        bool                   `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,15,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContestResponse) Reset() {
	*x = UpdateContestResponse{}
	mi := &file_contest_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestResponse) ProtoMessage() {}

func (x *UpdateContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestResponse.ProtoReflect.Descriptor instead.
func (*UpdateContestResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateContestResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateContestResponse) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *UpdateContestResponse) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *UpdateContestResponse) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *UpdateContestResponse) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

func (x *UpdateContestResponse) GetSongOwnId() string {
	if x != nil {
		return x.SongOwnId
	}
	return ""
}

func (x *UpdateContestResponse) GetSongRemakeId() string {
	if x != nil {
		return x.SongRemakeId
	}
	return ""
}

func (x *UpdateContestResponse) GetLitWorkId() string {
	if x != nil {
		return x.LitWorkId
	}
	return ""
}

func (x *UpdateContestResponse) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateContestResponse) GetRateBook() []string {
	if x != nil {
		return x.RateBook
	}
	return nil
}

func (x *UpdateContestResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateContestResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateContestResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UpdateContestResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *UpdateContestResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *UpdateContestResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *UpdateContestResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// CONTESTS = SET RATE
type UpdateContestAddRateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rate          *Rate                  `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContestAddRateRequest) Reset() {
	*x = UpdateContestAddRateRequest{}
	mi := &file_contest_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContestAddRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestAddRateRequest) ProtoMessage() {}

func (x *UpdateContestAddRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestAddRateRequest.ProtoReflect.Descriptor instead.
func (*UpdateContestAddRateRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateContestAddRateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateContestAddRateRequest) GetRate() *Rate {
	if x != nil {
		return x.Rate
	}
	return nil
}

type UpdateContestAddRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullContest   *FullContent           `protobuf:"bytes,2,opt,name=full_contest,json=fullContest,proto3" json:"full_contest,omitempty"`
	Message       string                 `protobuf:"bytes,18,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContestAddRateResponse) Reset() {
	*x = UpdateContestAddRateResponse{}
	mi := &file_contest_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContestAddRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestAddRateResponse) ProtoMessage() {}

func (x *UpdateContestAddRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestAddRateResponse.ProtoReflect.Descriptor instead.
func (*UpdateContestAddRateResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateContestAddRateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateContestAddRateResponse) GetFullContest() *FullContent {
	if x != nil {
		return x.FullContest
	}
	return nil
}

func (x *UpdateContestAddRateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// PERSON = ADD
type AddPersonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirstName     string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName    string                 `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Phone         []string               `protobuf:"bytes,5,rep,name=phone,proto3" json:"phone,omitempty"`
	Email         []string               `protobuf:"bytes,6,rep,name=email,proto3" json:"email,omitempty"`
	Bio           string                 `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`
	City          string                 `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	Active        bool                   `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPersonRequest) Reset() {
	*x = AddPersonRequest{}
	mi := &file_contest_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPersonRequest) ProtoMessage() {}

func (x *AddPersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPersonRequest.ProtoReflect.Descriptor instead.
func (*AddPersonRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{26}
}

func (x *AddPersonRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AddPersonRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AddPersonRequest) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *AddPersonRequest) GetPhone() []string {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *AddPersonRequest) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *AddPersonRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddPersonRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddPersonRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddPersonRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddPersonRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddPersonRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddPersonRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddPersonRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddPersonRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddPersonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName     string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	MiddleName    string                 `protobuf:"bytes,4,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	Phone         []string               `protobuf:"bytes,5,rep,name=phone,proto3" json:"phone,omitempty"`
	Email         []string               `protobuf:"bytes,6,rep,name=email,proto3" json:"email,omitempty"`
	Bio           string                 `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`
	City          string                 `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	Active        bool                   `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPersonResponse) Reset() {
	*x = AddPersonResponse{}
	mi := &file_contest_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPersonResponse) ProtoMessage() {}

func (x *AddPersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPersonResponse.ProtoReflect.Descriptor instead.
func (*AddPersonResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{27}
}

func (x *AddPersonResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddPersonResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AddPersonResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AddPersonResponse) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *AddPersonResponse) GetPhone() []string {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *AddPersonResponse) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *AddPersonResponse) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddPersonResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddPersonResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddPersonResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddPersonResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddPersonResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddPersonResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddPersonResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddPersonResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// PERSON = GET = ByID
type GetPersonByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPersonByIDRequest) Reset() {
	*x = GetPersonByIDRequest{}
	mi := &file_contest_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByIDRequest) ProtoMessage() {}

func (x *GetPersonByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPersonByIDRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{28}
}

func (x *GetPersonByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPersonByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Person        *Person                `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPersonByIDResponse) Reset() {
	*x = GetPersonByIDResponse{}
	mi := &file_contest_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByIDResponse) ProtoMessage() {}

func (x *GetPersonByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPersonByIDResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{29}
}

func (x *GetPersonByIDResponse) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *GetPersonByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// PERSONS = LIST
type ListPersonsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPersonsRequest) Reset() {
	*x = ListPersonsRequest{}
	mi := &file_contest_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPersonsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersonsRequest) ProtoMessage() {}

func (x *ListPersonsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersonsRequest.ProtoReflect.Descriptor instead.
func (*ListPersonsRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{30}
}

type ListPersonsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Persons       []*Person              `protobuf:"bytes,1,rep,name=persons,proto3" json:"persons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPersonsResponse) Reset() {
	*x = ListPersonsResponse{}
	mi := &file_contest_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPersonsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersonsResponse) ProtoMessage() {}

func (x *ListPersonsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersonsResponse.ProtoReflect.Descriptor instead.
func (*ListPersonsResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{31}
}

func (x *ListPersonsResponse) GetPersons() []*Person {
	if x != nil {
		return x.Persons
	}
	return nil
}

// PERSONS = LIST = ByRegion
type ListPersonsByRegionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPersonsByRegionRequest) Reset() {
	*x = ListPersonsByRegionRequest{}
	mi := &file_contest_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPersonsByRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersonsByRegionRequest) ProtoMessage() {}

func (x *ListPersonsByRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersonsByRegionRequest.ProtoReflect.Descriptor instead.
func (*ListPersonsByRegionRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{32}
}

func (x *ListPersonsByRegionRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ListPersonsByRegionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Persons       []*Person              `protobuf:"bytes,1,rep,name=persons,proto3" json:"persons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPersonsByRegionResponse) Reset() {
	*x = ListPersonsByRegionResponse{}
	mi := &file_contest_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPersonsByRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersonsByRegionResponse) ProtoMessage() {}

func (x *ListPersonsByRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersonsByRegionResponse.ProtoReflect.Descriptor instead.
func (*ListPersonsByRegionResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{33}
}

func (x *ListPersonsByRegionResponse) GetPersons() []*Person {
	if x != nil {
		return x.Persons
	}
	return nil
}

// PERSON = UPDATE
type UpdatePersonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Person        *Person                `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePersonRequest) Reset() {
	*x = UpdatePersonRequest{}
	mi := &file_contest_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePersonRequest) ProtoMessage() {}

func (x *UpdatePersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePersonRequest.ProtoReflect.Descriptor instead.
func (*UpdatePersonRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{34}
}

func (x *UpdatePersonRequest) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

type UpdatePersonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Person        *Person                `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePersonResponse) Reset() {
	*x = UpdatePersonResponse{}
	mi := &file_contest_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePersonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePersonResponse) ProtoMessage() {}

func (x *UpdatePersonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePersonResponse.ProtoReflect.Descriptor instead.
func (*UpdatePersonResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{35}
}

func (x *UpdatePersonResponse) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *UpdatePersonResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ARTIST = ADD
type AddArtistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle    string                 `protobuf:"bytes,3,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Type          []string               `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	City          string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Site          string                 `protobuf:"bytes,8,opt,name=site,proto3" json:"site,omitempty"`
	Photo         []string               `protobuf:"bytes,9,rep,name=photo,proto3" json:"photo,omitempty"`
	Bio           string                 `protobuf:"bytes,10,opt,name=bio,proto3" json:"bio,omitempty"`
	Socmedia      []string               `protobuf:"bytes,11,rep,name=socmedia,proto3" json:"socmedia,omitempty"`
	Release       []string               `protobuf:"bytes,12,rep,name=release,proto3" json:"release,omitempty"`
	Team          []string               `protobuf:"bytes,13,rep,name=team,proto3" json:"team,omitempty"`
	Active        bool                   `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,15,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddArtistRequest) Reset() {
	*x = AddArtistRequest{}
	mi := &file_contest_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArtistRequest) ProtoMessage() {}

func (x *AddArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArtistRequest.ProtoReflect.Descriptor instead.
func (*AddArtistRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{36}
}

func (x *AddArtistRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddArtistRequest) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *AddArtistRequest) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *AddArtistRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddArtistRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddArtistRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddArtistRequest) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *AddArtistRequest) GetPhoto() []string {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *AddArtistRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddArtistRequest) GetSocmedia() []string {
	if x != nil {
		return x.Socmedia
	}
	return nil
}

func (x *AddArtistRequest) GetRelease() []string {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *AddArtistRequest) GetTeam() []string {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *AddArtistRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddArtistRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddArtistRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddArtistRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddArtistRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddArtistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ShortTitle    string                 `protobuf:"bytes,3,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Type          []string               `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	City          string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Region        string                 `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Country       string                 `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Site          string                 `protobuf:"bytes,8,opt,name=site,proto3" json:"site,omitempty"`
	Photo         []string               `protobuf:"bytes,9,rep,name=photo,proto3" json:"photo,omitempty"`
	Bio           string                 `protobuf:"bytes,10,opt,name=bio,proto3" json:"bio,omitempty"`
	Socmedia      []string               `protobuf:"bytes,11,rep,name=socmedia,proto3" json:"socmedia,omitempty"`
	Release       []string               `protobuf:"bytes,12,rep,name=release,proto3" json:"release,omitempty"`
	Team          []string               `protobuf:"bytes,13,rep,name=team,proto3" json:"team,omitempty"`
	Active        bool                   `protobuf:"varint,14,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,15,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddArtistResponse) Reset() {
	*x = AddArtistResponse{}
	mi := &file_contest_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArtistResponse) ProtoMessage() {}

func (x *AddArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArtistResponse.ProtoReflect.Descriptor instead.
func (*AddArtistResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{37}
}

func (x *AddArtistResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddArtistResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddArtistResponse) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *AddArtistResponse) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *AddArtistResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddArtistResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddArtistResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddArtistResponse) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *AddArtistResponse) GetPhoto() []string {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *AddArtistResponse) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddArtistResponse) GetSocmedia() []string {
	if x != nil {
		return x.Socmedia
	}
	return nil
}

func (x *AddArtistResponse) GetRelease() []string {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *AddArtistResponse) GetTeam() []string {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *AddArtistResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddArtistResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddArtistResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddArtistResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddArtistResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// ARTISTS = LIST
type ListArtistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArtistsRequest) Reset() {
	*x = ListArtistsRequest{}
	mi := &file_contest_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArtistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtistsRequest) ProtoMessage() {}

func (x *ListArtistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtistsRequest.ProtoReflect.Descriptor instead.
func (*ListArtistsRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{38}
}

type ListArtistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artists       []*AddArtistResponse   `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArtistsResponse) Reset() {
	*x = ListArtistsResponse{}
	mi := &file_contest_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArtistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtistsResponse) ProtoMessage() {}

func (x *ListArtistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtistsResponse.ProtoReflect.Descriptor instead.
func (*ListArtistsResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{39}
}

func (x *ListArtistsResponse) GetArtists() []*AddArtistResponse {
	if x != nil {
		return x.Artists
	}
	return nil
}

// ARTIST = GET = ByID
type GetArtistByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtistByIDRequest) Reset() {
	*x = GetArtistByIDRequest{}
	mi := &file_contest_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtistByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistByIDRequest) ProtoMessage() {}

func (x *GetArtistByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistByIDRequest.ProtoReflect.Descriptor instead.
func (*GetArtistByIDRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{40}
}

func (x *GetArtistByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetArtistByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        *Artist                `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtistByIDResponse) Reset() {
	*x = GetArtistByIDResponse{}
	mi := &file_contest_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtistByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtistByIDResponse) ProtoMessage() {}

func (x *GetArtistByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtistByIDResponse.ProtoReflect.Descriptor instead.
func (*GetArtistByIDResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{41}
}

func (x *GetArtistByIDResponse) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *GetArtistByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ARTIST = UPDATE
type UpdateArtistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        *Artist                `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateArtistRequest) Reset() {
	*x = UpdateArtistRequest{}
	mi := &file_contest_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArtistRequest) ProtoMessage() {}

func (x *UpdateArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArtistRequest.ProtoReflect.Descriptor instead.
func (*UpdateArtistRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateArtistRequest) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

type UpdateArtistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        *Artist                `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateArtistResponse) Reset() {
	*x = UpdateArtistResponse{}
	mi := &file_contest_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArtistResponse) ProtoMessage() {}

func (x *UpdateArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArtistResponse.ProtoReflect.Descriptor instead.
func (*UpdateArtistResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateArtistResponse) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *UpdateArtistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// SONG = ADD
type AddSongRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        []string               `protobuf:"bytes,2,rep,name=artist,proto3" json:"artist,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	AuthorLyrics  []string               `protobuf:"bytes,4,rep,name=author_lyrics,json=authorLyrics,proto3" json:"author_lyrics,omitempty"`
	AuthorMusic   []string               `protobuf:"bytes,5,rep,name=author_music,json=authorMusic,proto3" json:"author_music,omitempty"`
	Arranger      []string               `protobuf:"bytes,6,rep,name=arranger,proto3" json:"arranger,omitempty"`
	Audio         []string               `protobuf:"bytes,7,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,8,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,9,rep,name=video,proto3" json:"video,omitempty"`
	Pts           []string               `protobuf:"bytes,10,rep,name=pts,proto3" json:"pts,omitempty"`
	Release       string                 `protobuf:"bytes,11,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,12,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,14,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSongRequest) Reset() {
	*x = AddSongRequest{}
	mi := &file_contest_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongRequest) ProtoMessage() {}

func (x *AddSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongRequest.ProtoReflect.Descriptor instead.
func (*AddSongRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{44}
}

func (x *AddSongRequest) GetArtist() []string {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *AddSongRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddSongRequest) GetAuthorLyrics() []string {
	if x != nil {
		return x.AuthorLyrics
	}
	return nil
}

func (x *AddSongRequest) GetAuthorMusic() []string {
	if x != nil {
		return x.AuthorMusic
	}
	return nil
}

func (x *AddSongRequest) GetArranger() []string {
	if x != nil {
		return x.Arranger
	}
	return nil
}

func (x *AddSongRequest) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AddSongRequest) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *AddSongRequest) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *AddSongRequest) GetPts() []string {
	if x != nil {
		return x.Pts
	}
	return nil
}

func (x *AddSongRequest) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *AddSongRequest) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *AddSongRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddSongRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddSongRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddSongRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddSongRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Song          *Song                  `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSongResponse) Reset() {
	*x = AddSongResponse{}
	mi := &file_contest_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongResponse) ProtoMessage() {}

func (x *AddSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongResponse.ProtoReflect.Descriptor instead.
func (*AddSongResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{45}
}

func (x *AddSongResponse) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

func (x *AddSongResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// SONGS = LIST
type ListSongsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSongsRequest) Reset() {
	*x = ListSongsRequest{}
	mi := &file_contest_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSongsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSongsRequest) ProtoMessage() {}

func (x *ListSongsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSongsRequest.ProtoReflect.Descriptor instead.
func (*ListSongsRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{46}
}

type ListSongsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Songs         []*AddSongResponse     `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSongsResponse) Reset() {
	*x = ListSongsResponse{}
	mi := &file_contest_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSongsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSongsResponse) ProtoMessage() {}

func (x *ListSongsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSongsResponse.ProtoReflect.Descriptor instead.
func (*ListSongsResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{47}
}

func (x *ListSongsResponse) GetSongs() []*AddSongResponse {
	if x != nil {
		return x.Songs
	}
	return nil
}

// SONG = GET = ByID
type GetSongByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSongByIDRequest) Reset() {
	*x = GetSongByIDRequest{}
	mi := &file_contest_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongByIDRequest) ProtoMessage() {}

func (x *GetSongByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongByIDRequest.ProtoReflect.Descriptor instead.
func (*GetSongByIDRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{48}
}

func (x *GetSongByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSongByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Song          *Song                  `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSongByIDResponse) Reset() {
	*x = GetSongByIDResponse{}
	mi := &file_contest_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSongByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSongByIDResponse) ProtoMessage() {}

func (x *GetSongByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSongByIDResponse.ProtoReflect.Descriptor instead.
func (*GetSongByIDResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{49}
}

func (x *GetSongByIDResponse) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

func (x *GetSongByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// SONG = UPDATE
type UpdateSongRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Song          *Song                  `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSongRequest) Reset() {
	*x = UpdateSongRequest{}
	mi := &file_contest_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSongRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongRequest) ProtoMessage() {}

func (x *UpdateSongRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongRequest.ProtoReflect.Descriptor instead.
func (*UpdateSongRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateSongRequest) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

type UpdateSongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Song          *Song                  `protobuf:"bytes,1,opt,name=song,proto3" json:"song,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSongResponse) Reset() {
	*x = UpdateSongResponse{}
	mi := &file_contest_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSongResponse) ProtoMessage() {}

func (x *UpdateSongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSongResponse.ProtoReflect.Descriptor instead.
func (*UpdateSongResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateSongResponse) GetSong() *Song {
	if x != nil {
		return x.Song
	}
	return nil
}

func (x *UpdateSongResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// LITWORK = ADD
type AddLitWorkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorID      []string               `protobuf:"bytes,3,rep,name=authorID,proto3" json:"authorID,omitempty"`
	Audio         []string               `protobuf:"bytes,4,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,5,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,6,rep,name=video,proto3" json:"video,omitempty"`
	Release       string                 `protobuf:"bytes,7,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,8,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,10,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLitWorkRequest) Reset() {
	*x = AddLitWorkRequest{}
	mi := &file_contest_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLitWorkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLitWorkRequest) ProtoMessage() {}

func (x *AddLitWorkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLitWorkRequest.ProtoReflect.Descriptor instead.
func (*AddLitWorkRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{52}
}

func (x *AddLitWorkRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddLitWorkRequest) GetAuthorID() []string {
	if x != nil {
		return x.AuthorID
	}
	return nil
}

func (x *AddLitWorkRequest) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AddLitWorkRequest) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *AddLitWorkRequest) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *AddLitWorkRequest) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *AddLitWorkRequest) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *AddLitWorkRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddLitWorkRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddLitWorkRequest) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddLitWorkRequest) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddLitWorkRequest) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

type AddLitWorkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorID      []string               `protobuf:"bytes,3,rep,name=authorID,proto3" json:"authorID,omitempty"`
	Audio         []string               `protobuf:"bytes,4,rep,name=audio,proto3" json:"audio,omitempty"`
	Clip          []string               `protobuf:"bytes,5,rep,name=clip,proto3" json:"clip,omitempty"`
	Video         []string               `protobuf:"bytes,6,rep,name=video,proto3" json:"video,omitempty"`
	Release       string                 `protobuf:"bytes,7,opt,name=release,proto3" json:"release,omitempty"`
	Lyrics        string                 `protobuf:"bytes,8,opt,name=lyrics,proto3" json:"lyrics,omitempty"`
	Active        bool                   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	OwnerId       string                 `protobuf:"bytes,10,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Expires       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLitWorkResponse) Reset() {
	*x = AddLitWorkResponse{}
	mi := &file_contest_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLitWorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLitWorkResponse) ProtoMessage() {}

func (x *AddLitWorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLitWorkResponse.ProtoReflect.Descriptor instead.
func (*AddLitWorkResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{53}
}

func (x *AddLitWorkResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddLitWorkResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddLitWorkResponse) GetAuthorID() []string {
	if x != nil {
		return x.AuthorID
	}
	return nil
}

func (x *AddLitWorkResponse) GetAudio() []string {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AddLitWorkResponse) GetClip() []string {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *AddLitWorkResponse) GetVideo() []string {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *AddLitWorkResponse) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

func (x *AddLitWorkResponse) GetLyrics() string {
	if x != nil {
		return x.Lyrics
	}
	return ""
}

func (x *AddLitWorkResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AddLitWorkResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *AddLitWorkResponse) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *AddLitWorkResponse) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *AddLitWorkResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

// LITWORKS = LIST
type ListLitWorksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLitWorksRequest) Reset() {
	*x = ListLitWorksRequest{}
	mi := &file_contest_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLitWorksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLitWorksRequest) ProtoMessage() {}

func (x *ListLitWorksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLitWorksRequest.ProtoReflect.Descriptor instead.
func (*ListLitWorksRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{54}
}

type ListLitWorksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LitWorks      []*AddLitWorkResponse  `protobuf:"bytes,1,rep,name=lit_works,json=litWorks,proto3" json:"lit_works,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLitWorksResponse) Reset() {
	*x = ListLitWorksResponse{}
	mi := &file_contest_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLitWorksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLitWorksResponse) ProtoMessage() {}

func (x *ListLitWorksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLitWorksResponse.ProtoReflect.Descriptor instead.
func (*ListLitWorksResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{55}
}

func (x *ListLitWorksResponse) GetLitWorks() []*AddLitWorkResponse {
	if x != nil {
		return x.LitWorks
	}
	return nil
}

// LITWORK = GET = ByID
type GetLitWorkByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLitWorkByIDRequest) Reset() {
	*x = GetLitWorkByIDRequest{}
	mi := &file_contest_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLitWorkByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLitWorkByIDRequest) ProtoMessage() {}

func (x *GetLitWorkByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLitWorkByIDRequest.ProtoReflect.Descriptor instead.
func (*GetLitWorkByIDRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{56}
}

func (x *GetLitWorkByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLitWorkByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LitWork       *LitWork               `protobuf:"bytes,1,opt,name=lit_work,json=litWork,proto3" json:"lit_work,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLitWorkByIDResponse) Reset() {
	*x = GetLitWorkByIDResponse{}
	mi := &file_contest_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLitWorkByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLitWorkByIDResponse) ProtoMessage() {}

func (x *GetLitWorkByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLitWorkByIDResponse.ProtoReflect.Descriptor instead.
func (*GetLitWorkByIDResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{57}
}

func (x *GetLitWorkByIDResponse) GetLitWork() *LitWork {
	if x != nil {
		return x.LitWork
	}
	return nil
}

func (x *GetLitWorkByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// SONG = UPDATE
type UpdateLitWorkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LitWork       *LitWork               `protobuf:"bytes,1,opt,name=lit_work,json=litWork,proto3" json:"lit_work,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLitWorkRequest) Reset() {
	*x = UpdateLitWorkRequest{}
	mi := &file_contest_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLitWorkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLitWorkRequest) ProtoMessage() {}

func (x *UpdateLitWorkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLitWorkRequest.ProtoReflect.Descriptor instead.
func (*UpdateLitWorkRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateLitWorkRequest) GetLitWork() *LitWork {
	if x != nil {
		return x.LitWork
	}
	return nil
}

type UpdateLitWorkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LitWork       *LitWork               `protobuf:"bytes,1,opt,name=lit_work,json=litWork,proto3" json:"lit_work,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLitWorkResponse) Reset() {
	*x = UpdateLitWorkResponse{}
	mi := &file_contest_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLitWorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLitWorkResponse) ProtoMessage() {}

func (x *UpdateLitWorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLitWorkResponse.ProtoReflect.Descriptor instead.
func (*UpdateLitWorkResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateLitWorkResponse) GetLitWork() *LitWork {
	if x != nil {
		return x.LitWork
	}
	return nil
}

func (x *UpdateLitWorkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_contest_proto protoreflect.FileDescriptor

const file_contest_proto_rawDesc = "" +
	"\n" +
	"\rcontest.proto\x12\acontest\x1a\x1fgoogle/protobuf/timestamp.proto\"\xac\x04\n" +
	"\n" +
	"OneContest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vcompetition\x18\x03 \x01(\tR\vcompetition\x12\x1b\n" +
	"\tauthor_id\x18\x05 \x01(\tR\bauthorId\x12\x1b\n" +
	"\tartist_id\x18\x06 \x01(\tR\bartistId\x12\x1e\n" +
	"\vsong_own_id\x18\a \x01(\tR\tsongOwnId\x12$\n" +
	"\x0esong_remake_id\x18\b \x01(\tR\fsongRemakeId\x12\x1e\n" +
	"\vlit_work_id\x18\t \x01(\tR\tlitWorkId\x12\x12\n" +
	"\x04sort\x18\n" +
	" \x01(\x05R\x04sort\x12\x1b\n" +
	"\trate_book\x18\v \x03(\tR\brateBook\x12\x16\n" +
	"\x06status\x18\f \x01(\x05R\x06status\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xde\x05\n" +
	"\vFullContent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vcompetition\x18\x03 \x01(\tR\vcompetition\x12%\n" +
	"\x0ecompetition_id\x18\x04 \x01(\tR\rcompetitionId\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12'\n" +
	"\x06author\x18\x06 \x01(\v2\x0f.contest.PersonR\x06author\x12!\n" +
	"\x04song\x18\b \x03(\v2\r.contest.SongR\x04song\x127\n" +
	"\x0fartist_song_own\x18\t \x03(\v2\x0f.contest.ArtistR\rartistSongOwn\x12+\n" +
	"\blit_work\x18\v \x03(\v2\x10.contest.LitWorkR\alitWork\x12=\n" +
	"\x12artist_song_remake\x18\f \x03(\v2\x0f.contest.ArtistR\x10artistSongRemake\x12!\n" +
	"\x04rate\x18\r \x03(\v2\r.contest.RateR\x04rate\x12\x12\n" +
	"\x04sort\x18\x0e \x01(\x05R\x04sort\x12\x16\n" +
	"\x06status\x18\x0f \x01(\x05R\x06status\x12\x16\n" +
	"\x06active\x18\x10 \x01(\bR\x06active\x12\x15\n" +
	"\x06app_id\x18\x11 \x01(\tR\x05appId\x12\x19\n" +
	"\bowner_id\x18\x12 \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xce\x03\n" +
	"\x06Person\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\x1f\n" +
	"\vmiddle_name\x18\x04 \x01(\tR\n" +
	"middleName\x12\x14\n" +
	"\x05phone\x18\x05 \x03(\tR\x05phone\x12\x14\n" +
	"\x05email\x18\x06 \x03(\tR\x05email\x12\x10\n" +
	"\x03bio\x18\a \x01(\tR\x03bio\x12\x12\n" +
	"\x04city\x18\b \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\n" +
	" \x01(\tR\acountry\x12\x16\n" +
	"\x06active\x18\v \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x81\x04\n" +
	"\x04Song\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06artist\x18\x02 \x03(\tR\x06artist\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12#\n" +
	"\rauthor_lyrics\x18\x04 \x03(\tR\fauthorLyrics\x12!\n" +
	"\fauthor_music\x18\x05 \x03(\tR\vauthorMusic\x12\x1a\n" +
	"\barranger\x18\x06 \x03(\tR\barranger\x12\x14\n" +
	"\x05audio\x18\a \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\b \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\t \x03(\tR\x05video\x12\x10\n" +
	"\x03pts\x18\n" +
	" \x03(\tR\x03pts\x12\x18\n" +
	"\arelease\x18\v \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\f \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x84\x04\n" +
	"\x06Artist\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1f\n" +
	"\vshort_title\x18\x03 \x01(\tR\n" +
	"shortTitle\x12\x12\n" +
	"\x04type\x18\x04 \x03(\tR\x04type\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\x06 \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\a \x01(\tR\acountry\x12\x12\n" +
	"\x04site\x18\b \x01(\tR\x04site\x12\x14\n" +
	"\x05photo\x18\t \x03(\tR\x05photo\x12\x10\n" +
	"\x03bio\x18\n" +
	" \x01(\tR\x03bio\x12\x1a\n" +
	"\bsocmedia\x18\v \x03(\tR\bsocmedia\x12\x18\n" +
	"\arelease\x18\f \x03(\tR\arelease\x12\x12\n" +
	"\x04team\x18\r \x03(\tR\x04team\x12\x16\n" +
	"\x06active\x18\x0e \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xcc\x02\n" +
	"\x04Rate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\frate_book_id\x18\x02 \x01(\tR\n" +
	"rateBookId\x12\x12\n" +
	"\x04rate\x18\x03 \x01(\x05R\x04rate\x12\x12\n" +
	"\x04jury\x18\x05 \x01(\tR\x04jury\x12\x16\n" +
	"\x06active\x18\x06 \x01(\bR\x06active\x12\x15\n" +
	"\x06app_id\x18\x0f \x01(\tR\x05appId\x12\x19\n" +
	"\bowner_id\x18\x10 \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xf6\x02\n" +
	"\bRateBook\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vcontent_app\x18\x02 \x01(\tR\n" +
	"contentApp\x12\x17\n" +
	"\asong_id\x18\x03 \x01(\tR\x06songId\x12\x1e\n" +
	"\vlit_work_id\x18\x04 \x01(\tR\tlitWorkId\x12\x14\n" +
	"\x05level\x18\x05 \x01(\x05R\x05level\x12\x16\n" +
	"\x06active\x18\x06 \x01(\bR\x06active\x12\x15\n" +
	"\x06app_id\x18\a \x01(\tR\x05appId\x12\x19\n" +
	"\bowner_id\x18\b \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x92\x03\n" +
	"\aLitWork\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1a\n" +
	"\bauthorID\x18\x03 \x03(\tR\bauthorID\x12\x14\n" +
	"\x05audio\x18\x04 \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\x05 \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\x06 \x03(\tR\x05video\x12\x18\n" +
	"\arelease\x18\a \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\b \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\n" +
	" \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xb3\x04\n" +
	"\x11AddContestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vcompetition\x18\x03 \x01(\tR\vcompetition\x12\x1b\n" +
	"\tauthor_id\x18\x05 \x01(\tR\bauthorId\x12\x1b\n" +
	"\tartist_id\x18\x06 \x01(\tR\bartistId\x12\x1e\n" +
	"\vsong_own_id\x18\a \x01(\tR\tsongOwnId\x12$\n" +
	"\x0esong_remake_id\x18\b \x01(\tR\fsongRemakeId\x12\x1e\n" +
	"\vlit_work_id\x18\t \x01(\tR\tlitWorkId\x12\x12\n" +
	"\x04sort\x18\n" +
	" \x01(\x05R\x04sort\x12\x1b\n" +
	"\trate_book\x18\v \x03(\tR\brateBook\x12\x16\n" +
	"\x06status\x18\f \x01(\x05R\x06status\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xb4\x04\n" +
	"\x12AddContestResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vcompetition\x18\x03 \x01(\tR\vcompetition\x12\x1b\n" +
	"\tauthor_id\x18\x05 \x01(\tR\bauthorId\x12\x1b\n" +
	"\tartist_id\x18\x06 \x01(\tR\bartistId\x12\x1e\n" +
	"\vsong_own_id\x18\a \x01(\tR\tsongOwnId\x12$\n" +
	"\x0esong_remake_id\x18\b \x01(\tR\fsongRemakeId\x12\x1e\n" +
	"\vlit_work_id\x18\t \x01(\tR\tlitWorkId\x12\x12\n" +
	"\x04sort\x18\n" +
	" \x01(\x05R\x04sort\x12\x1b\n" +
	"\trate_book\x18\v \x03(\tR\brateBook\x12\x16\n" +
	"\x06status\x18\f \x01(\x05R\x06status\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"'\n" +
	"\x15GetContestByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"a\n" +
	"\x16GetContestByIDResponse\x12-\n" +
	"\acontest\x18\x01 \x01(\v2\x13.contest.OneContestR\acontest\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\":\n" +
	"\x1bGetContestByPersonIDRequest\x12\x1b\n" +
	"\tperson_id\x18\x01 \x01(\tR\bpersonId\"h\n" +
	"\x1dGetContestsByPersonIDResponse\x12-\n" +
	"\acontest\x18\x01 \x01(\v2\x13.contest.OneContestR\acontest\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"K\n" +
	"\"GetContestWithEmptyCategoryRequest\x12%\n" +
	"\x0ecompetition_id\x18\x01 \x01(\tR\rcompetitionId\"U\n" +
	"#GetContestWithEmptyCategoryResponse\x12.\n" +
	"\acontest\x18\x01 \x01(\v2\x14.contest.FullContentR\acontest\"\x8b\x01\n" +
	"\x1dListContestsByCategoryRequest\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\x12 \n" +
	"\vcompetition\x18\x04 \x01(\tR\vcompetition\"h\n" +
	"\x1eListContestsByCategoryResponse\x120\n" +
	"\bcontests\x18\x01 \x03(\v2\x14.contest.FullContentR\bcontests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"e\n" +
	"\x13ListContestsRequest\x12 \n" +
	"\vcompetition\x18\x01 \x01(\tR\vcompetition\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"^\n" +
	"\x14ListContestsResponse\x120\n" +
	"\bcontests\x18\x01 \x03(\v2\x14.contest.FullContentR\bcontests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\x85\x01\n" +
	"\x1bListContestsByRegionRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\x12 \n" +
	"\vcompetition\x18\x04 \x01(\tR\vcompetition\"f\n" +
	"\x1cListContestsByRegionResponse\x120\n" +
	"\bcontests\x18\x01 \x03(\v2\x14.contest.FullContentR\bcontests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xd2\x04\n" +
	"\x14UpdateContestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vcompetition\x18\x03 \x01(\tR\vcompetition\x12\x1b\n" +
	"\tauthor_id\x18\x05 \x01(\tR\bauthorId\x12\x1b\n" +
	"\tartist_id\x18\x06 \x01(\tR\bartistId\x12\x1e\n" +
	"\vsong_own_id\x18\a \x01(\tR\tsongOwnId\x12$\n" +
	"\x0esong_remake_id\x18\b \x01(\tR\fsongRemakeId\x12\x1e\n" +
	"\vlit_work_id\x18\t \x01(\tR\tlitWorkId\x12\x12\n" +
	"\x04sort\x18\n" +
	" \x01(\x05R\x04sort\x12\x1b\n" +
	"\trate_book\x18\v \x03(\tR\brateBook\x12\x16\n" +
	"\x06status\x18\f \x01(\x05R\x06status\x12\x1a\n" +
	"\bcategory\x18\r \x01(\tR\bcategory\x12\x16\n" +
	"\x06active\x18\x0e \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xd3\x04\n" +
	"\x15UpdateContestResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12 \n" +
	"\vcompetition\x18\x03 \x01(\tR\vcompetition\x12\x1b\n" +
	"\tauthor_id\x18\x05 \x01(\tR\bauthorId\x12\x1b\n" +
	"\tartist_id\x18\x06 \x01(\tR\bartistId\x12\x1e\n" +
	"\vsong_own_id\x18\a \x01(\tR\tsongOwnId\x12$\n" +
	"\x0esong_remake_id\x18\b \x01(\tR\fsongRemakeId\x12\x1e\n" +
	"\vlit_work_id\x18\t \x01(\tR\tlitWorkId\x12\x12\n" +
	"\x04sort\x18\n" +
	" \x01(\x05R\x04sort\x12\x1b\n" +
	"\trate_book\x18\v \x03(\tR\brateBook\x12\x16\n" +
	"\x06status\x18\f \x01(\x05R\x06status\x12\x1a\n" +
	"\bcategory\x18\r \x01(\tR\bcategory\x12\x16\n" +
	"\x06active\x18\x0e \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"P\n" +
	"\x1bUpdateContestAddRateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\x04rate\x18\x02 \x01(\v2\r.contest.RateR\x04rate\"\x81\x01\n" +
	"\x1cUpdateContestAddRateResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x127\n" +
	"\ffull_contest\x18\x02 \x01(\v2\x14.contest.FullContentR\vfullContest\x12\x18\n" +
	"\amessage\x18\x12 \x01(\tR\amessage\"\xc8\x03\n" +
	"\x10AddPersonRequest\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\x1f\n" +
	"\vmiddle_name\x18\x04 \x01(\tR\n" +
	"middleName\x12\x14\n" +
	"\x05phone\x18\x05 \x03(\tR\x05phone\x12\x14\n" +
	"\x05email\x18\x06 \x03(\tR\x05email\x12\x10\n" +
	"\x03bio\x18\a \x01(\tR\x03bio\x12\x12\n" +
	"\x04city\x18\b \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\n" +
	" \x01(\tR\acountry\x12\x16\n" +
	"\x06active\x18\v \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\xd9\x03\n" +
	"\x11AddPersonResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\x1f\n" +
	"\vmiddle_name\x18\x04 \x01(\tR\n" +
	"middleName\x12\x14\n" +
	"\x05phone\x18\x05 \x03(\tR\x05phone\x12\x14\n" +
	"\x05email\x18\x06 \x03(\tR\x05email\x12\x10\n" +
	"\x03bio\x18\a \x01(\tR\x03bio\x12\x12\n" +
	"\x04city\x18\b \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\n" +
	" \x01(\tR\acountry\x12\x16\n" +
	"\x06active\x18\v \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"&\n" +
	"\x14GetPersonByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Z\n" +
	"\x15GetPersonByIDResponse\x12'\n" +
	"\x06person\x18\x01 \x01(\v2\x0f.contest.PersonR\x06person\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x14\n" +
	"\x12ListPersonsRequest\"@\n" +
	"\x13ListPersonsResponse\x12)\n" +
	"\apersons\x18\x01 \x03(\v2\x0f.contest.PersonR\apersons\"4\n" +
	"\x1aListPersonsByRegionRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\"H\n" +
	"\x1bListPersonsByRegionResponse\x12)\n" +
	"\apersons\x18\x01 \x03(\v2\x0f.contest.PersonR\apersons\">\n" +
	"\x13UpdatePersonRequest\x12'\n" +
	"\x06person\x18\x01 \x01(\v2\x0f.contest.PersonR\x06person\"Y\n" +
	"\x14UpdatePersonResponse\x12'\n" +
	"\x06person\x18\x01 \x01(\v2\x0f.contest.PersonR\x06person\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xfe\x03\n" +
	"\x10AddArtistRequest\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1f\n" +
	"\vshort_title\x18\x03 \x01(\tR\n" +
	"shortTitle\x12\x12\n" +
	"\x04type\x18\x04 \x03(\tR\x04type\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\x06 \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\a \x01(\tR\acountry\x12\x12\n" +
	"\x04site\x18\b \x01(\tR\x04site\x12\x14\n" +
	"\x05photo\x18\t \x03(\tR\x05photo\x12\x10\n" +
	"\x03bio\x18\n" +
	" \x01(\tR\x03bio\x12\x1a\n" +
	"\bsocmedia\x18\v \x03(\tR\bsocmedia\x12\x18\n" +
	"\arelease\x18\f \x03(\tR\arelease\x12\x12\n" +
	"\x04team\x18\r \x03(\tR\x04team\x12\x16\n" +
	"\x06active\x18\x0e \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x8f\x04\n" +
	"\x11AddArtistResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1f\n" +
	"\vshort_title\x18\x03 \x01(\tR\n" +
	"shortTitle\x12\x12\n" +
	"\x04type\x18\x04 \x03(\tR\x04type\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x16\n" +
	"\x06region\x18\x06 \x01(\tR\x06region\x12\x18\n" +
	"\acountry\x18\a \x01(\tR\acountry\x12\x12\n" +
	"\x04site\x18\b \x01(\tR\x04site\x12\x14\n" +
	"\x05photo\x18\t \x03(\tR\x05photo\x12\x10\n" +
	"\x03bio\x18\n" +
	" \x01(\tR\x03bio\x12\x1a\n" +
	"\bsocmedia\x18\v \x03(\tR\bsocmedia\x12\x18\n" +
	"\arelease\x18\f \x03(\tR\arelease\x12\x12\n" +
	"\x04team\x18\r \x03(\tR\x04team\x12\x16\n" +
	"\x06active\x18\x0e \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0f \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x14\n" +
	"\x12ListArtistsRequest\"K\n" +
	"\x13ListArtistsResponse\x124\n" +
	"\aartists\x18\x01 \x03(\v2\x1a.contest.AddArtistResponseR\aartists\"&\n" +
	"\x14GetArtistByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Z\n" +
	"\x15GetArtistByIDResponse\x12'\n" +
	"\x06artist\x18\x01 \x01(\v2\x0f.contest.ArtistR\x06artist\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\">\n" +
	"\x13UpdateArtistRequest\x12'\n" +
	"\x06artist\x18\x01 \x01(\v2\x0f.contest.ArtistR\x06artist\"Y\n" +
	"\x14UpdateArtistResponse\x12'\n" +
	"\x06artist\x18\x01 \x01(\v2\x0f.contest.ArtistR\x06artist\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xfb\x03\n" +
	"\x0eAddSongRequest\x12\x16\n" +
	"\x06artist\x18\x02 \x03(\tR\x06artist\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12#\n" +
	"\rauthor_lyrics\x18\x04 \x03(\tR\fauthorLyrics\x12!\n" +
	"\fauthor_music\x18\x05 \x03(\tR\vauthorMusic\x12\x1a\n" +
	"\barranger\x18\x06 \x03(\tR\barranger\x12\x14\n" +
	"\x05audio\x18\a \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\b \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\t \x03(\tR\x05video\x12\x10\n" +
	"\x03pts\x18\n" +
	" \x03(\tR\x03pts\x12\x18\n" +
	"\arelease\x18\v \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\f \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\r \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\x0e \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"N\n" +
	"\x0fAddSongResponse\x12!\n" +
	"\x04song\x18\x01 \x01(\v2\r.contest.SongR\x04song\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x12\n" +
	"\x10ListSongsRequest\"C\n" +
	"\x11ListSongsResponse\x12.\n" +
	"\x05songs\x18\x01 \x03(\v2\x18.contest.AddSongResponseR\x05songs\"$\n" +
	"\x12GetSongByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"R\n" +
	"\x13GetSongByIDResponse\x12!\n" +
	"\x04song\x18\x01 \x01(\v2\r.contest.SongR\x04song\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"6\n" +
	"\x11UpdateSongRequest\x12!\n" +
	"\x04song\x18\x01 \x01(\v2\r.contest.SongR\x04song\"Q\n" +
	"\x12UpdateSongResponse\x12!\n" +
	"\x04song\x18\x01 \x01(\v2\r.contest.SongR\x04song\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x8c\x03\n" +
	"\x11AddLitWorkRequest\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1a\n" +
	"\bauthorID\x18\x03 \x03(\tR\bauthorID\x12\x14\n" +
	"\x05audio\x18\x04 \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\x05 \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\x06 \x03(\tR\x05video\x12\x18\n" +
	"\arelease\x18\a \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\b \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\n" +
	" \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x9d\x03\n" +
	"\x12AddLitWorkResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1a\n" +
	"\bauthorID\x18\x03 \x03(\tR\bauthorID\x12\x14\n" +
	"\x05audio\x18\x04 \x03(\tR\x05audio\x12\x12\n" +
	"\x04clip\x18\x05 \x03(\tR\x04clip\x12\x14\n" +
	"\x05video\x18\x06 \x03(\tR\x05video\x12\x18\n" +
	"\arelease\x18\a \x01(\tR\arelease\x12\x16\n" +
	"\x06lyrics\x18\b \x01(\tR\x06lyrics\x12\x16\n" +
	"\x06active\x18\t \x01(\bR\x06active\x12\x19\n" +
	"\bowner_id\x18\n" +
	" \x01(\tR\aownerId\x124\n" +
	"\acreated\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\x124\n" +
	"\aexpires\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\"\x15\n" +
	"\x13ListLitWorksRequest\"P\n" +
	"\x14ListLitWorksResponse\x128\n" +
	"\tlit_works\x18\x01 \x03(\v2\x1b.contest.AddLitWorkResponseR\blitWorks\"'\n" +
	"\x15GetLitWorkByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"_\n" +
	"\x16GetLitWorkByIDResponse\x12+\n" +
	"\blit_work\x18\x01 \x01(\v2\x10.contest.LitWorkR\alitWork\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"C\n" +
	"\x14UpdateLitWorkRequest\x12+\n" +
	"\blit_work\x18\x01 \x01(\v2\x10.contest.LitWorkR\alitWork\"^\n" +
	"\x15UpdateLitWorkResponse\x12+\n" +
	"\blit_work\x18\x01 \x01(\v2\x10.contest.LitWorkR\alitWork\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xd8\x10\n" +
	"\aContest\x12E\n" +
	"\n" +
	"AddContest\x12\x1a.contest.AddContestRequest\x1a\x1b.contest.AddContestResponse\x12Q\n" +
	"\x0eGetContestByID\x12\x1e.contest.GetContestByIDRequest\x1a\x1f.contest.GetContestByIDResponse\x12e\n" +
	"\x15GetContestsByPersonID\x12$.contest.GetContestByPersonIDRequest\x1a&.contest.GetContestsByPersonIDResponse\x12x\n" +
	"\x1bGetContestWithEmptyCategory\x12+.contest.GetContestWithEmptyCategoryRequest\x1a,.contest.GetContestWithEmptyCategoryResponse\x12K\n" +
	"\fListContests\x12\x1c.contest.ListContestsRequest\x1a\x1d.contest.ListContestsResponse\x12i\n" +
	"\x16ListContestsByCategory\x12&.contest.ListContestsByCategoryRequest\x1a'.contest.ListContestsByCategoryResponse\x12c\n" +
	"\x14ListContestsByRegion\x12$.contest.ListContestsByRegionRequest\x1a%.contest.ListContestsByRegionResponse\x12N\n" +
	"\rUpdateContest\x12\x1d.contest.UpdateContestRequest\x1a\x1e.contest.UpdateContestResponse\x12c\n" +
	"\x14UpdateContestAddRate\x12$.contest.UpdateContestAddRateRequest\x1a%.contest.UpdateContestAddRateResponse\x12B\n" +
	"\tAddPerson\x12\x19.contest.AddPersonRequest\x1a\x1a.contest.AddPersonResponse\x12N\n" +
	"\rGetPersonByID\x12\x1d.contest.GetPersonByIDRequest\x1a\x1e.contest.GetPersonByIDResponse\x12H\n" +
	"\vListPersons\x12\x1b.contest.ListPersonsRequest\x1a\x1c.contest.ListPersonsResponse\x12`\n" +
	"\x13ListPersonsByRegion\x12#.contest.ListPersonsByRegionRequest\x1a$.contest.ListPersonsByRegionResponse\x12K\n" +
	"\fUpdatePerson\x12\x1c.contest.UpdatePersonRequest\x1a\x1d.contest.UpdatePersonResponse\x12B\n" +
	"\tAddArtist\x12\x19.contest.AddArtistRequest\x1a\x1a.contest.AddArtistResponse\x12H\n" +
	"\vListArtists\x12\x1b.contest.ListArtistsRequest\x1a\x1c.contest.ListArtistsResponse\x12N\n" +
	"\rGetArtistByID\x12\x1d.contest.GetArtistByIDRequest\x1a\x1e.contest.GetArtistByIDResponse\x12K\n" +
	"\fUpdateArtist\x12\x1c.contest.UpdateArtistRequest\x1a\x1d.contest.UpdateArtistResponse\x12<\n" +
	"\aAddSong\x12\x17.contest.AddSongRequest\x1a\x18.contest.AddSongResponse\x12B\n" +
	"\tListSongs\x12\x19.contest.ListSongsRequest\x1a\x1a.contest.ListSongsResponse\x12H\n" +
	"\vGetSongByID\x12\x1b.contest.GetSongByIDRequest\x1a\x1c.contest.GetSongByIDResponse\x12E\n" +
	"\n" +
	"UpdateSong\x12\x1a.contest.UpdateSongRequest\x1a\x1b.contest.UpdateSongResponse\x12E\n" +
	"\n" +
	"AddLitWork\x12\x1a.contest.AddLitWorkRequest\x1a\x1b.contest.AddLitWorkResponse\x12K\n" +
	"\fListLitWorks\x12\x1c.contest.ListLitWorksRequest\x1a\x1d.contest.ListLitWorksResponse\x12Q\n" +
	"\x0eGetLitWorkByID\x12\x1e.contest.GetLitWorkByIDRequest\x1a\x1f.contest.GetLitWorkByIDResponse\x12N\n" +
	"\rUpdateLitWork\x12\x1d.contest.UpdateLitWorkRequest\x1a\x1e.contest.UpdateLitWorkResponseB3Z1github.com/erkkipm/contest_proto/gen/go;contestV1b\x06proto3"

var (
	file_contest_proto_rawDescOnce sync.Once
	file_contest_proto_rawDescData []byte
)

func file_contest_proto_rawDescGZIP() []byte {
	file_contest_proto_rawDescOnce.Do(func() {
		file_contest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contest_proto_rawDesc), len(file_contest_proto_rawDesc)))
	})
	return file_contest_proto_rawDescData
}

var file_contest_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_contest_proto_goTypes = []any{
	(*OneContest)(nil),                          // 0: contest.OneContest
	(*FullContent)(nil),                         // 1: contest.FullContent
	(*Person)(nil),                              // 2: contest.Person
	(*Song)(nil),                                // 3: contest.Song
	(*Artist)(nil),                              // 4: contest.Artist
	(*Rate)(nil),                                // 5: contest.Rate
	(*RateBook)(nil),                            // 6: contest.RateBook
	(*LitWork)(nil),                             // 7: contest.LitWork
	(*AddContestRequest)(nil),                   // 8: contest.AddContestRequest
	(*AddContestResponse)(nil),                  // 9: contest.AddContestResponse
	(*GetContestByIDRequest)(nil),               // 10: contest.GetContestByIDRequest
	(*GetContestByIDResponse)(nil),              // 11: contest.GetContestByIDResponse
	(*GetContestByPersonIDRequest)(nil),         // 12: contest.GetContestByPersonIDRequest
	(*GetContestsByPersonIDResponse)(nil),       // 13: contest.GetContestsByPersonIDResponse
	(*GetContestWithEmptyCategoryRequest)(nil),  // 14: contest.GetContestWithEmptyCategoryRequest
	(*GetContestWithEmptyCategoryResponse)(nil), // 15: contest.GetContestWithEmptyCategoryResponse
	(*ListContestsByCategoryRequest)(nil),       // 16: contest.ListContestsByCategoryRequest
	(*ListContestsByCategoryResponse)(nil),      // 17: contest.ListContestsByCategoryResponse
	(*ListContestsRequest)(nil),                 // 18: contest.ListContestsRequest
	(*ListContestsResponse)(nil),                // 19: contest.ListContestsResponse
	(*ListContestsByRegionRequest)(nil),         // 20: contest.ListContestsByRegionRequest
	(*ListContestsByRegionResponse)(nil),        // 21: contest.ListContestsByRegionResponse
	(*UpdateContestRequest)(nil),                // 22: contest.UpdateContestRequest
	(*UpdateContestResponse)(nil),               // 23: contest.UpdateContestResponse
	(*UpdateContestAddRateRequest)(nil),         // 24: contest.UpdateContestAddRateRequest
	(*UpdateContestAddRateResponse)(nil),        // 25: contest.UpdateContestAddRateResponse
	(*AddPersonRequest)(nil),                    // 26: contest.AddPersonRequest
	(*AddPersonResponse)(nil),                   // 27: contest.AddPersonResponse
	(*GetPersonByIDRequest)(nil),                // 28: contest.GetPersonByIDRequest
	(*GetPersonByIDResponse)(nil),               // 29: contest.GetPersonByIDResponse
	(*ListPersonsRequest)(nil),                  // 30: contest.ListPersonsRequest
	(*ListPersonsResponse)(nil),                 // 31: contest.ListPersonsResponse
	(*ListPersonsByRegionRequest)(nil),          // 32: contest.ListPersonsByRegionRequest
	(*ListPersonsByRegionResponse)(nil),         // 33: contest.ListPersonsByRegionResponse
	(*UpdatePersonRequest)(nil),                 // 34: contest.UpdatePersonRequest
	(*UpdatePersonResponse)(nil),                // 35: contest.UpdatePersonResponse
	(*AddArtistRequest)(nil),                    // 36: contest.AddArtistRequest
	(*AddArtistResponse)(nil),                   // 37: contest.AddArtistResponse
	(*ListArtistsRequest)(nil),                  // 38: contest.ListArtistsRequest
	(*ListArtistsResponse)(nil),                 // 39: contest.ListArtistsResponse
	(*GetArtistByIDRequest)(nil),                // 40: contest.GetArtistByIDRequest
	(*GetArtistByIDResponse)(nil),               // 41: contest.GetArtistByIDResponse
	(*UpdateArtistRequest)(nil),                 // 42: contest.UpdateArtistRequest
	(*UpdateArtistResponse)(nil),                // 43: contest.UpdateArtistResponse
	(*AddSongRequest)(nil),                      // 44: contest.AddSongRequest
	(*AddSongResponse)(nil),                     // 45: contest.AddSongResponse
	(*ListSongsRequest)(nil),                    // 46: contest.ListSongsRequest
	(*ListSongsResponse)(nil),                   // 47: contest.ListSongsResponse
	(*GetSongByIDRequest)(nil),                  // 48: contest.GetSongByIDRequest
	(*GetSongByIDResponse)(nil),                 // 49: contest.GetSongByIDResponse
	(*UpdateSongRequest)(nil),                   // 50: contest.UpdateSongRequest
	(*UpdateSongResponse)(nil),                  // 51: contest.UpdateSongResponse
	(*AddLitWorkRequest)(nil),                   // 52: contest.AddLitWorkRequest
	(*AddLitWorkResponse)(nil),                  // 53: contest.AddLitWorkResponse
	(*ListLitWorksRequest)(nil),                 // 54: contest.ListLitWorksRequest
	(*ListLitWorksResponse)(nil),                // 55: contest.ListLitWorksResponse
	(*GetLitWorkByIDRequest)(nil),               // 56: contest.GetLitWorkByIDRequest
	(*GetLitWorkByIDResponse)(nil),              // 57: contest.GetLitWorkByIDResponse
	(*UpdateLitWorkRequest)(nil),                // 58: contest.UpdateLitWorkRequest
	(*UpdateLitWorkResponse)(nil),               // 59: contest.UpdateLitWorkResponse
	(*timestamppb.Timestamp)(nil),               // 60: google.protobuf.Timestamp
}
var file_contest_proto_depIdxs = []int32{
	60,  // 0: contest.OneContest.date:type_name -> google.protobuf.Timestamp
	60,  // 1: contest.OneContest.created:type_name -> google.protobuf.Timestamp
	60,  // 2: contest.OneContest.updated:type_name -> google.protobuf.Timestamp
	60,  // 3: contest.OneContest.expires:type_name -> google.protobuf.Timestamp
	60,  // 4: contest.FullContent.date:type_name -> google.protobuf.Timestamp
	2,   // 5: contest.FullContent.author:type_name -> contest.Person
	3,   // 6: contest.FullContent.song:type_name -> contest.Song
	4,   // 7: contest.FullContent.artist_song_own:type_name -> contest.Artist
	7,   // 8: contest.FullContent.lit_work:type_name -> contest.LitWork
	4,   // 9: contest.FullContent.artist_song_remake:type_name -> contest.Artist
	5,   // 10: contest.FullContent.rate:type_name -> contest.Rate
	60,  // 11: contest.FullContent.created:type_name -> google.protobuf.Timestamp
	60,  // 12: contest.FullContent.updated:type_name -> google.protobuf.Timestamp
	60,  // 13: contest.FullContent.expires:type_name -> google.protobuf.Timestamp
	60,  // 14: contest.Person.created:type_name -> google.protobuf.Timestamp
	60,  // 15: contest.Person.updated:type_name -> google.protobuf.Timestamp
	60,  // 16: contest.Person.expires:type_name -> google.protobuf.Timestamp
	60,  // 17: contest.Song.created:type_name -> google.protobuf.Timestamp
	60,  // 18: contest.Song.updated:type_name -> google.protobuf.Timestamp
	60,  // 19: contest.Song.expires:type_name -> google.protobuf.Timestamp
	60,  // 20: contest.Artist.created:type_name -> google.protobuf.Timestamp
	60,  // 21: contest.Artist.updated:type_name -> google.protobuf.Timestamp
	60,  // 22: contest.Artist.expires:type_name -> google.protobuf.Timestamp
	60,  // 23: contest.Rate.created:type_name -> google.protobuf.Timestamp
	60,  // 24: contest.Rate.updated:type_name -> google.protobuf.Timestamp
	60,  // 25: contest.Rate.expires:type_name -> google.protobuf.Timestamp
	60,  // 26: contest.RateBook.created:type_name -> google.protobuf.Timestamp
	60,  // 27: contest.RateBook.updated:type_name -> google.protobuf.Timestamp
	60,  // 28: contest.RateBook.expires:type_name -> google.protobuf.Timestamp
	60,  // 29: contest.LitWork.created:type_name -> google.protobuf.Timestamp
	60,  // 30: contest.LitWork.updated:type_name -> google.protobuf.Timestamp
	60,  // 31: contest.LitWork.expires:type_name -> google.protobuf.Timestamp
	60,  // 32: contest.AddContestRequest.date:type_name -> google.protobuf.Timestamp
	60,  // 33: contest.AddContestRequest.created:type_name -> google.protobuf.Timestamp
	60,  // 34: contest.AddContestRequest.updated:type_name -> google.protobuf.Timestamp
	60,  // 35: contest.AddContestRequest.expires:type_name -> google.protobuf.Timestamp
	60,  // 36: contest.AddContestResponse.date:type_name -> google.protobuf.Timestamp
	60,  // 37: contest.AddContestResponse.created:type_name -> google.protobuf.Timestamp
	60,  // 38: contest.AddContestResponse.updated:type_name -> google.protobuf.Timestamp
	60,  // 39: contest.AddContestResponse.expires:type_name -> google.protobuf.Timestamp
	0,   // 40: contest.GetContestByIDResponse.contest:type_name -> contest.OneContest
	0,   // 41: contest.GetContestsByPersonIDResponse.contest:type_name -> contest.OneContest
	1,   // 42: contest.GetContestWithEmptyCategoryResponse.contest:type_name -> contest.FullContent
	1,   // 43: contest.ListContestsByCategoryResponse.contests:type_name -> contest.FullContent
	1,   // 44: contest.ListContestsResponse.contests:type_name -> contest.FullContent
	1,   // 45: contest.ListContestsByRegionResponse.contests:type_name -> contest.FullContent
	60,  // 46: contest.UpdateContestRequest.date:type_name -> google.protobuf.Timestamp
	60,  // 47: contest.UpdateContestRequest.created:type_name -> google.protobuf.Timestamp
	60,  // 48: contest.UpdateContestRequest.updated:type_name -> google.protobuf.Timestamp
	60,  // 49: contest.UpdateContestRequest.expires:type_name -> google.protobuf.Timestamp
	60,  // 50: contest.UpdateContestResponse.date:type_name -> google.protobuf.Timestamp
	60,  // 51: contest.UpdateContestResponse.created:type_name -> google.protobuf.Timestamp
	60,  // 52: contest.UpdateContestResponse.updated:type_name -> google.protobuf.Timestamp
	60,  // 53: contest.UpdateContestResponse.expires:type_name -> google.protobuf.Timestamp
	5,   // 54: contest.UpdateContestAddRateRequest.rate:type_name -> contest.Rate
	1,   // 55: contest.UpdateContestAddRateResponse.full_contest:type_name -> contest.FullContent
	60,  // 56: contest.AddPersonRequest.created:type_name -> google.protobuf.Timestamp
	60,  // 57: contest.AddPersonRequest.updated:type_name -> google.protobuf.Timestamp
	60,  // 58: contest.AddPersonRequest.expires:type_name -> google.protobuf.Timestamp
	60,  // 59: contest.AddPersonResponse.created:type_name -> google.protobuf.Timestamp
	60,  // 60: contest.AddPersonResponse.updated:type_name -> google.protobuf.Timestamp
	60,  // 61: contest.AddPersonResponse.expires:type_name -> google.protobuf.Timestamp
	2,   // 62: contest.GetPersonByIDResponse.person:type_name -> contest.Person
	2,   // 63: contest.ListPersonsResponse.persons:type_name -> contest.Person
	2,   // 64: contest.ListPersonsByRegionResponse.persons:type_name -> contest.Person
	2,   // 65: contest.UpdatePersonRequest.person:type_name -> contest.Person
	2,   // 66: contest.UpdatePersonResponse.person:type_name -> contest.Person
	60,  // 67: contest.AddArtistRequest.created:type_name -> google.protobuf.Timestamp
	60,  // 68: contest.AddArtistRequest.updated:type_name -> google.protobuf.Timestamp
	60,  // 69: contest.AddArtistRequest.expires:type_name -> google.protobuf.Timestamp
	60,  // 70: contest.AddArtistResponse.created:type_name -> google.protobuf.Timestamp
	60,  // 71: contest.AddArtistResponse.updated:type_name -> google.protobuf.Timestamp
	60,  // 72: contest.AddArtistResponse.expires:type_name -> google.protobuf.Timestamp
	37,  // 73: contest.ListArtistsResponse.artists:type_name -> contest.AddArtistResponse
	4,   // 74: contest.GetArtistByIDResponse.artist:type_name -> contest.Artist
	4,   // 75: contest.UpdateArtistRequest.artist:type_name -> contest.Artist
	4,   // 76: contest.UpdateArtistResponse.artist:type_name -> contest.Artist
	60,  // 77: contest.AddSongRequest.created:type_name -> google.protobuf.Timestamp
	60,  // 78: contest.AddSongRequest.updated:type_name -> google.protobuf.Timestamp
	60,  // 79: contest.AddSongRequest.expires:type_name -> google.protobuf.Timestamp
	3,   // 80: contest.AddSongResponse.song:type_name -> contest.Song
	45,  // 81: contest.ListSongsResponse.songs:type_name -> contest.AddSongResponse
	3,   // 82: contest.GetSongByIDResponse.song:type_name -> contest.Song
	3,   // 83: contest.UpdateSongRequest.song:type_name -> contest.Song
	3,   // 84: contest.UpdateSongResponse.song:type_name -> contest.Song
	60,  // 85: contest.AddLitWorkRequest.created:type_name -> google.protobuf.Timestamp
	60,  // 86: contest.AddLitWorkRequest.updated:type_name -> google.protobuf.Timestamp
	60,  // 87: contest.AddLitWorkRequest.expires:type_name -> google.protobuf.Timestamp
	60,  // 88: contest.AddLitWorkResponse.created:type_name -> google.protobuf.Timestamp
	60,  // 89: contest.AddLitWorkResponse.updated:type_name -> google.protobuf.Timestamp
	60,  // 90: contest.AddLitWorkResponse.expires:type_name -> google.protobuf.Timestamp
	53,  // 91: contest.ListLitWorksResponse.lit_works:type_name -> contest.AddLitWorkResponse
	7,   // 92: contest.GetLitWorkByIDResponse.lit_work:type_name -> contest.LitWork
	7,   // 93: contest.UpdateLitWorkRequest.lit_work:type_name -> contest.LitWork
	7,   // 94: contest.UpdateLitWorkResponse.lit_work:type_name -> contest.LitWork
	8,   // 95: contest.Contest.AddContest:input_type -> contest.AddContestRequest
	10,  // 96: contest.Contest.GetContestByID:input_type -> contest.GetContestByIDRequest
	12,  // 97: contest.Contest.GetContestsByPersonID:input_type -> contest.GetContestByPersonIDRequest
	14,  // 98: contest.Contest.GetContestWithEmptyCategory:input_type -> contest.GetContestWithEmptyCategoryRequest
	18,  // 99: contest.Contest.ListContests:input_type -> contest.ListContestsRequest
	16,  // 100: contest.Contest.ListContestsByCategory:input_type -> contest.ListContestsByCategoryRequest
	20,  // 101: contest.Contest.ListContestsByRegion:input_type -> contest.ListContestsByRegionRequest
	22,  // 102: contest.Contest.UpdateContest:input_type -> contest.UpdateContestRequest
	24,  // 103: contest.Contest.UpdateContestAddRate:input_type -> contest.UpdateContestAddRateRequest
	26,  // 104: contest.Contest.AddPerson:input_type -> contest.AddPersonRequest
	28,  // 105: contest.Contest.GetPersonByID:input_type -> contest.GetPersonByIDRequest
	30,  // 106: contest.Contest.ListPersons:input_type -> contest.ListPersonsRequest
	32,  // 107: contest.Contest.ListPersonsByRegion:input_type -> contest.ListPersonsByRegionRequest
	34,  // 108: contest.Contest.UpdatePerson:input_type -> contest.UpdatePersonRequest
	36,  // 109: contest.Contest.AddArtist:input_type -> contest.AddArtistRequest
	38,  // 110: contest.Contest.ListArtists:input_type -> contest.ListArtistsRequest
	40,  // 111: contest.Contest.GetArtistByID:input_type -> contest.GetArtistByIDRequest
	42,  // 112: contest.Contest.UpdateArtist:input_type -> contest.UpdateArtistRequest
	44,  // 113: contest.Contest.AddSong:input_type -> contest.AddSongRequest
	46,  // 114: contest.Contest.ListSongs:input_type -> contest.ListSongsRequest
	48,  // 115: contest.Contest.GetSongByID:input_type -> contest.GetSongByIDRequest
	50,  // 116: contest.Contest.UpdateSong:input_type -> contest.UpdateSongRequest
	52,  // 117: contest.Contest.AddLitWork:input_type -> contest.AddLitWorkRequest
	54,  // 118: contest.Contest.ListLitWorks:input_type -> contest.ListLitWorksRequest
	56,  // 119: contest.Contest.GetLitWorkByID:input_type -> contest.GetLitWorkByIDRequest
	58,  // 120: contest.Contest.UpdateLitWork:input_type -> contest.UpdateLitWorkRequest
	9,   // 121: contest.Contest.AddContest:output_type -> contest.AddContestResponse
	11,  // 122: contest.Contest.GetContestByID:output_type -> contest.GetContestByIDResponse
	13,  // 123: contest.Contest.GetContestsByPersonID:output_type -> contest.GetContestsByPersonIDResponse
	15,  // 124: contest.Contest.GetContestWithEmptyCategory:output_type -> contest.GetContestWithEmptyCategoryResponse
	19,  // 125: contest.Contest.ListContests:output_type -> contest.ListContestsResponse
	17,  // 126: contest.Contest.ListContestsByCategory:output_type -> contest.ListContestsByCategoryResponse
	21,  // 127: contest.Contest.ListContestsByRegion:output_type -> contest.ListContestsByRegionResponse
	23,  // 128: contest.Contest.UpdateContest:output_type -> contest.UpdateContestResponse
	25,  // 129: contest.Contest.UpdateContestAddRate:output_type -> contest.UpdateContestAddRateResponse
	27,  // 130: contest.Contest.AddPerson:output_type -> contest.AddPersonResponse
	29,  // 131: contest.Contest.GetPersonByID:output_type -> contest.GetPersonByIDResponse
	31,  // 132: contest.Contest.ListPersons:output_type -> contest.ListPersonsResponse
	33,  // 133: contest.Contest.ListPersonsByRegion:output_type -> contest.ListPersonsByRegionResponse
	35,  // 134: contest.Contest.UpdatePerson:output_type -> contest.UpdatePersonResponse
	37,  // 135: contest.Contest.AddArtist:output_type -> contest.AddArtistResponse
	39,  // 136: contest.Contest.ListArtists:output_type -> contest.ListArtistsResponse
	41,  // 137: contest.Contest.GetArtistByID:output_type -> contest.GetArtistByIDResponse
	43,  // 138: contest.Contest.UpdateArtist:output_type -> contest.UpdateArtistResponse
	45,  // 139: contest.Contest.AddSong:output_type -> contest.AddSongResponse
	47,  // 140: contest.Contest.ListSongs:output_type -> contest.ListSongsResponse
	49,  // 141: contest.Contest.GetSongByID:output_type -> contest.GetSongByIDResponse
	51,  // 142: contest.Contest.UpdateSong:output_type -> contest.UpdateSongResponse
	53,  // 143: contest.Contest.AddLitWork:output_type -> contest.AddLitWorkResponse
	55,  // 144: contest.Contest.ListLitWorks:output_type -> contest.ListLitWorksResponse
	57,  // 145: contest.Contest.GetLitWorkByID:output_type -> contest.GetLitWorkByIDResponse
	59,  // 146: contest.Contest.UpdateLitWork:output_type -> contest.UpdateLitWorkResponse
	121, // [121:147] is the sub-list for method output_type
	95,  // [95:121] is the sub-list for method input_type
	95,  // [95:95] is the sub-list for extension type_name
	95,  // [95:95] is the sub-list for extension extendee
	0,   // [0:95] is the sub-list for field type_name
}

func init() { file_contest_proto_init() }
func file_contest_proto_init() {
	if File_contest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contest_proto_rawDesc), len(file_contest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contest_proto_goTypes,
		DependencyIndexes: file_contest_proto_depIdxs,
		MessageInfos:      file_contest_proto_msgTypes,
	}.Build()
	File_contest_proto = out.File
	file_contest_proto_goTypes = nil
	file_contest_proto_depIdxs = nil
}
