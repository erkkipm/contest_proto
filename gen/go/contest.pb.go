// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.14.0
// source: contest.proto

// Текущий пакет - указывает пространство имен для сервиса и сообщений.

package contestV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`              // e-mail при регистрации
	Phone         string                 `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`              // Телефон при регистрации
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`        // Пароль при регистрации
	AppId         string                 `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"` // Идентификатор приложения
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	mi := &file_contest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{0}
}

func (x *AddRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type AddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Идентификатор зарегистрированного юзера
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`             // Статус регистрации
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`              // Сообщение
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddResponse) Reset() {
	*x = AddResponse{}
	mi := &file_contest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponse) ProtoMessage() {}

func (x *AddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponse.ProtoReflect.Descriptor instead.
func (*AddResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{1}
}

func (x *AddResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EditRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`              // e-mail при входе
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`        // Пароль при входе
	AppId         string                 `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"` // Идентификатор приложения для входа
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditRequest) Reset() {
	*x = EditRequest{}
	mi := &file_contest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRequest) ProtoMessage() {}

func (x *EditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRequest.ProtoReflect.Descriptor instead.
func (*EditRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{2}
}

func (x *EditRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EditRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EditRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type EditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // Токен для входа в приложение
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditResponse) Reset() {
	*x = EditResponse{}
	mi := &file_contest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditResponse) ProtoMessage() {}

func (x *EditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditResponse.ProtoReflect.Descriptor instead.
func (*EditResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{3}
}

func (x *EditResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // Имя юзера
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"` // e-mail юзера
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_contest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Идентификатор юзера
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_contest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Идентификатор юзера
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestRequest) Reset() {
	*x = GetContestRequest{}
	mi := &file_contest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestRequest) ProtoMessage() {}

func (x *GetContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestRequest.ProtoReflect.Descriptor instead.
func (*GetContestRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{6}
}

func (x *GetContestRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetContestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAdmin       bool                   `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"` // Признак администратора
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestResponse) Reset() {
	*x = GetContestResponse{}
	mi := &file_contest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestResponse) ProtoMessage() {}

func (x *GetContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestResponse.ProtoReflect.Descriptor instead.
func (*GetContestResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{7}
}

func (x *GetContestResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

var File_contest_proto protoreflect.FileDescriptor

const file_contest_proto_rawDesc = "" +
	"\n" +
	"\rcontest.proto\x12\acontest\"k\n" +
	"\n" +
	"AddRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x02 \x01(\tR\x05phone\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x15\n" +
	"\x06app_id\x18\x04 \x01(\tR\x05appId\"Z\n" +
	"\vAddResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"V\n" +
	"\vEditRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x15\n" +
	"\x06app_id\x18\x03 \x01(\tR\x05appId\"$\n" +
	"\fEditResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"9\n" +
	"\rDeleteRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\")\n" +
	"\x0eDeleteResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\",\n" +
	"\x11GetContestRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"/\n" +
	"\x12GetContestResponse\x12\x19\n" +
	"\bis_admin\x18\x01 \x01(\bR\aisAdmin2\xab\x01\n" +
	"\aContest\x120\n" +
	"\x03Add\x12\x13.contest.AddRequest\x1a\x14.contest.AddResponse\x123\n" +
	"\x04Edit\x12\x14.contest.EditRequest\x1a\x15.contest.EditResponse\x129\n" +
	"\x06Delete\x12\x16.contest.DeleteRequest\x1a\x17.contest.DeleteResponseB,Z*github.com/erkkipm/contest_proto;contestV1b\x06proto3"

var (
	file_contest_proto_rawDescOnce sync.Once
	file_contest_proto_rawDescData []byte
)

func file_contest_proto_rawDescGZIP() []byte {
	file_contest_proto_rawDescOnce.Do(func() {
		file_contest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contest_proto_rawDesc), len(file_contest_proto_rawDesc)))
	})
	return file_contest_proto_rawDescData
}

var file_contest_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_contest_proto_goTypes = []any{
	(*AddRequest)(nil),         // 0: contest.AddRequest
	(*AddResponse)(nil),        // 1: contest.AddResponse
	(*EditRequest)(nil),        // 2: contest.EditRequest
	(*EditResponse)(nil),       // 3: contest.EditResponse
	(*DeleteRequest)(nil),      // 4: contest.DeleteRequest
	(*DeleteResponse)(nil),     // 5: contest.DeleteResponse
	(*GetContestRequest)(nil),  // 6: contest.GetContestRequest
	(*GetContestResponse)(nil), // 7: contest.GetContestResponse
}
var file_contest_proto_depIdxs = []int32{
	0, // 0: contest.Contest.Add:input_type -> contest.AddRequest
	2, // 1: contest.Contest.Edit:input_type -> contest.EditRequest
	4, // 2: contest.Contest.Delete:input_type -> contest.DeleteRequest
	1, // 3: contest.Contest.Add:output_type -> contest.AddResponse
	3, // 4: contest.Contest.Edit:output_type -> contest.EditResponse
	5, // 5: contest.Contest.Delete:output_type -> contest.DeleteResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_contest_proto_init() }
func file_contest_proto_init() {
	if File_contest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contest_proto_rawDesc), len(file_contest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contest_proto_goTypes,
		DependencyIndexes: file_contest_proto_depIdxs,
		MessageInfos:      file_contest_proto_msgTypes,
	}.Build()
	File_contest_proto = out.File
	file_contest_proto_goTypes = nil
	file_contest_proto_depIdxs = nil
}
